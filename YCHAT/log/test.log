  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "level" integer, "description" text, "skill_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_badges_on_skill_id" ON "badges" ("skill_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches"[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "branches" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "badge_id" integer, "camp_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_badge_id" ON "camp_badges" ("badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_camp_id" ON "camp_badges" ("camp_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks"[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camper_camp_badge_id" integer, "task_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks" ("camper_camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks" ("task_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "camper_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges" ("camper_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "campers" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "parent_id" integer, "first_name" varchar, "last_name" varchar, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_campers_on_parent_id" ON "campers" ("parent_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "camps" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "program" varchar, "start_date" date, "end_date" date, "active" boolean, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camps_on_location_id" ON "camps" ("location_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "counselor_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges" ("counselor_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_counselors_on_user_id" ON "counselors" ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "locations" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "branch_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_locations_on_branch_id" ON "locations" ("branch_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "parents" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_parents_on_user_id" ON "parents" ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "skills" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "category" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "description" text, "badge_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX "index_tasks_on_badge_id" ON "tasks" ("badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password" varchar, "first_name" varchar, "last_name" varchar, "role" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190318171158)[0m
  [1m[35m (1.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171120),
(20190318171031),
(20190318171116),
(20190318171054),
(20190318171110),
(20190318171006),
(20190318171020),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-03-28 04:07:16.989365"], ["updated_at", "2019-03-28 04:07:16.989365"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "level" integer, "description" text, "skill_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_badges_on_skill_id" ON "badges" ("skill_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "branches" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges"[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "badge_id" integer, "camp_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_badge_id" ON "camp_badges" ("badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_camp_id" ON "camp_badges" ("camp_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camper_camp_badge_id" integer, "task_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks" ("camper_camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks" ("task_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "camper_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges" ("camper_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "campers" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "parent_id" integer, "first_name" varchar, "last_name" varchar, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_campers_on_parent_id" ON "campers" ("parent_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps"[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "camps" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "program" varchar, "start_date" date, "end_date" date, "active" boolean, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_camps_on_location_id" ON "camps" ("location_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "counselor_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges" ("counselor_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_counselors_on_user_id" ON "counselors" ("user_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "locations" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "branch_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX "index_locations_on_branch_id" ON "locations" ("branch_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents"[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "parents" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_parents_on_user_id" ON "parents" ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "skills" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "category" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks"[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "description" text, "badge_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_tasks_on_badge_id" ON "tasks" ("badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password" varchar, "first_name" varchar, "last_name" varchar, "role" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190318171158)[0m
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171120),
(20190318171031),
(20190318171116),
(20190318171054),
(20190318171110),
(20190318171006),
(20190318171020),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-03-28 05:05:08.275789"], ["updated_at", "2019-03-28 05:05:08.275789"]]
  [1m[35m (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "branches"[0m
  [1m[36mFixture Insert (0.7ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at", "id") VALUES ('MyString', '2019-03-28 05:06:33.731902', '2019-03-28 05:06:33.731902', 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at", "id") VALUES ('MyString', '2019-03-28 05:06:33.731902', '2019-03-28 05:06:33.731902', 298486374)[0m
  [1m[36mFixture Delete (0.3ms)[0m  [1m[31mDELETE FROM "skills"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "skills" ("name", "category", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2019-03-28 05:06:33.735425', '2019-03-28 05:06:33.735425', 980190962)[0m
  [1m[36mFixture Insert (0.0ms)[0m  [1m[32mINSERT INTO "skills" ("name", "category", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', '2019-03-28 05:06:33.735425', '2019-03-28 05:06:33.735425', 298486374)[0m
  [1m[36mFixture Delete (1.0ms)[0m  [1m[31mDELETE FROM "camp_badges"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "camp_badges" ("created_at", "updated_at", "id", "badge_id", "camp_id") VALUES ('2019-03-28 05:06:33.737604', '2019-03-28 05:06:33.737604', 980190962, 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "camp_badges" ("created_at", "updated_at", "id", "badge_id", "camp_id") VALUES ('2019-03-28 05:06:33.737604', '2019-03-28 05:06:33.737604', 298486374, 298486374, 298486374)[0m
  [1m[36mFixture Delete (1.0ms)[0m  [1m[31mDELETE FROM "badges"[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "badges" ("name", "level", "description", "created_at", "updated_at", "id", "skill_id") VALUES ('MyString', 1, 'MyText', '2019-03-28 05:06:33.740872', '2019-03-28 05:06:33.740872', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "badges" ("name", "level", "description", "created_at", "updated_at", "id", "skill_id") VALUES ('MyString', 1, 'MyText', '2019-03-28 05:06:33.740872', '2019-03-28 05:06:33.740872', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "camps"[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "camps" ("name", "program", "start_date", "end_date", "active", "created_at", "updated_at", "id", "location_id") VALUES ('MyString', 'MyString', '2019-03-18', '2019-03-18', 'f', '2019-03-28 05:06:33.744699', '2019-03-28 05:06:33.744699', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "camps" ("name", "program", "start_date", "end_date", "active", "created_at", "updated_at", "id", "location_id") VALUES ('MyString', 'MyString', '2019-03-18', '2019-03-18', 'f', '2019-03-28 05:06:33.744699', '2019-03-28 05:06:33.744699', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.5ms)[0m  [1m[31mDELETE FROM "users"[0m
  [1m[36mFixture Insert (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password", "first_name", "last_name", "role", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', 'MyString', 'MyString', 'MyString', '2019-03-28 05:06:33.767401', '2019-03-28 05:06:33.767401', 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password", "first_name", "last_name", "role", "created_at", "updated_at", "id") VALUES ('MyString', 'MyString', 'MyString', 'MyString', 'MyString', '2019-03-28 05:06:33.767401', '2019-03-28 05:06:33.767401', 298486374)[0m
  [1m[36mFixture Delete (0.5ms)[0m  [1m[31mDELETE FROM "counselor_camp_badges"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "counselor_camp_badges" ("created_at", "updated_at", "id", "camp_badge_id", "counselor_id") VALUES ('2019-03-28 05:06:33.771453', '2019-03-28 05:06:33.771453', 980190962, 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "counselor_camp_badges" ("created_at", "updated_at", "id", "camp_badge_id", "counselor_id") VALUES ('2019-03-28 05:06:33.771453', '2019-03-28 05:06:33.771453', 298486374, 298486374, 298486374)[0m
  [1m[36mFixture Delete (1.3ms)[0m  [1m[31mDELETE FROM "camper_camp_badge_tasks"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "camper_camp_badge_tasks" ("completed", "created_at", "updated_at", "id", "camper_camp_badge_id", "task_id") VALUES ('f', '2019-03-28 05:06:33.775193', '2019-03-28 05:06:33.775193', 980190962, 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "camper_camp_badge_tasks" ("completed", "created_at", "updated_at", "id", "camper_camp_badge_id", "task_id") VALUES ('f', '2019-03-28 05:06:33.775193', '2019-03-28 05:06:33.775193', 298486374, 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.6ms)[0m  [1m[31mDELETE FROM "locations"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at", "id", "branch_id") VALUES ('MyString', '2019-03-28 05:06:33.778968', '2019-03-28 05:06:33.778968', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.0ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at", "id", "branch_id") VALUES ('MyString', '2019-03-28 05:06:33.778968', '2019-03-28 05:06:33.778968', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.5ms)[0m  [1m[31mDELETE FROM "tasks"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "tasks" ("name", "description", "created_at", "updated_at", "id", "badge_id") VALUES ('MyString', 'MyText', '2019-03-28 05:06:33.781362', '2019-03-28 05:06:33.781362', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.0ms)[0m  [1m[32mINSERT INTO "tasks" ("name", "description", "created_at", "updated_at", "id", "badge_id") VALUES ('MyString', 'MyText', '2019-03-28 05:06:33.781362', '2019-03-28 05:06:33.781362', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.6ms)[0m  [1m[31mDELETE FROM "counselors"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "counselors" ("active", "created_at", "updated_at", "id", "user_id") VALUES ('f', '2019-03-28 05:06:33.783501', '2019-03-28 05:06:33.783501', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.0ms)[0m  [1m[32mINSERT INTO "counselors" ("active", "created_at", "updated_at", "id", "user_id") VALUES ('f', '2019-03-28 05:06:33.783501', '2019-03-28 05:06:33.783501', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.8ms)[0m  [1m[31mDELETE FROM "campers"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "campers" ("first_name", "last_name", "active", "created_at", "updated_at", "id", "parent_id") VALUES ('MyString', 'MyString', 'f', '2019-03-28 05:06:33.785604', '2019-03-28 05:06:33.785604', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "campers" ("first_name", "last_name", "active", "created_at", "updated_at", "id", "parent_id") VALUES ('MyString', 'MyString', 'f', '2019-03-28 05:06:33.785604', '2019-03-28 05:06:33.785604', 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.5ms)[0m  [1m[31mDELETE FROM "camper_camp_badges"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "camper_camp_badges" ("completed", "created_at", "updated_at", "id", "camp_badge_id", "camper_id") VALUES ('f', '2019-03-28 05:06:33.788461', '2019-03-28 05:06:33.788461', 980190962, 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.0ms)[0m  [1m[32mINSERT INTO "camper_camp_badges" ("completed", "created_at", "updated_at", "id", "camp_badge_id", "camper_id") VALUES ('f', '2019-03-28 05:06:33.788461', '2019-03-28 05:06:33.788461', 298486374, 298486374, 298486374)[0m
  [1m[36mFixture Delete (0.3ms)[0m  [1m[31mDELETE FROM "parents"[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "parents" ("active", "created_at", "updated_at", "id", "user_id") VALUES ('f', '2019-03-28 05:06:33.790995', '2019-03-28 05:06:33.790995', 980190962, 980190962)[0m
  [1m[36mFixture Insert (0.1ms)[0m  [1m[32mINSERT INTO "parents" ("active", "created_at", "updated_at", "id", "user_id") VALUES ('f', '2019-03-28 05:06:33.790995', '2019-03-28 05:06:33.790995', 298486374, 298486374)[0m
  [1m[35m (8.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------
BadgesControllerTest: test_should_get_new
-----------------------------------------
  [1m[36mBadge Load (0.3ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/badges/new" for 127.0.0.1 at 2019-03-28 01:06:33 -0400
Processing by BadgesController#new as HTML
  Rendering badges/new.html.erb within layouts/application
  Rendered badges/_form.html.erb (34.3ms)
  Rendered badges/new.html.erb within layouts/application (41.4ms)
Completed 200 OK in 657ms (Views: 650.1ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
BadgesControllerTest: test_should_destroy_badge
-----------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "badges"[0m
Started DELETE "/badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by BadgesController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "badges" WHERE "badges"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/badges
Completed 302 Found in 9ms (ActiveRecord: 0.7ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "badges"[0m
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
BadgesControllerTest: test_should_update_badge
----------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by BadgesController#update as HTML
  Parameters: {"badge"=>{"description"=>"MyText", "level"=>"1", "name"=>"MyString", "skill_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mBadge Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) AND ("badges"."id" != ?) LIMIT ?[0m  [["name", "MyString"], ["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  Rendering badges/edit.html.erb within layouts/application
  Rendered badges/_form.html.erb (2.7ms)
  Rendered badges/edit.html.erb within layouts/application (3.5ms)
Completed 200 OK in 44ms (Views: 9.2ms | ActiveRecord: 0.9ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
BadgesControllerTest: test_should_create_badge
----------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "badges"[0m
Started POST "/badges" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by BadgesController#create as HTML
  Parameters: {"badge"=>{"description"=>"MyText", "level"=>"1", "name"=>"MyString", "skill_id"=>"980190962"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  Rendering badges/new.html.erb within layouts/application
  Rendered badges/_form.html.erb (2.5ms)
  Rendered badges/new.html.erb within layouts/application (2.8ms)
Completed 200 OK in 8ms (Views: 4.2ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "badges"[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CounselorsControllerTest: test_should_show_counselor
----------------------------------------------------
  [1m[36mCounselor Load (0.2ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselors/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering counselors/show.html.erb within layouts/application
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered counselors/show.html.erb within layouts/application (9.5ms)
Completed 200 OK in 21ms (Views: 14.2ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
CounselorsControllerTest: test_should_create_counselor
------------------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselors"[0m
Started POST "/counselors" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#create as HTML
  Parameters: {"counselor"=>{"active"=>"false", "user_id"=>"980190962"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "counselors" ("user_id", "active", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 980190962], ["active", "f"], ["created_at", "2019-03-28 05:06:34.706917"], ["updated_at", "2019-03-28 05:06:34.706917"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/counselors/980190963
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselors"[0m
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" ORDER BY "counselors"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CounselorsControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselors" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#index as HTML
  Rendering counselors/index.html.erb within layouts/application
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT "counselors".* FROM "counselors"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered counselors/index.html.erb within layouts/application (2.8ms)
Completed 200 OK in 7ms (Views: 3.6ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
CounselorsControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselors/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering counselors/edit.html.erb within layouts/application
  Rendered counselors/_form.html.erb (6.3ms)
  Rendered counselors/edit.html.erb within layouts/application (10.2ms)
Completed 200 OK in 15ms (Views: 11.6ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
CounselorsControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselors/new" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#new as HTML
  Rendering counselors/new.html.erb within layouts/application
  Rendered counselors/_form.html.erb (1.1ms)
  Rendered counselors/new.html.erb within layouts/application (1.7ms)
Completed 200 OK in 6ms (Views: 3.0ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorsControllerTest: test_should_destroy_counselor
-------------------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselors"[0m
Started DELETE "/counselors/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselor Load (0.2ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "counselors" WHERE "counselors"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/counselors
Completed 302 Found in 2ms (ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselors"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
CounselorsControllerTest: test_should_update_counselor
------------------------------------------------------
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/counselors/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CounselorsController#update as HTML
  Parameters: {"counselor"=>{"active"=>"false", "user_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/counselors/980190962
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampersControllerTest: test_should_destroy_camper
-------------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "campers"[0m
Started DELETE "/campers/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "campers" WHERE "campers"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/campers
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "campers"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CampersControllerTest: test_should_create_camper
------------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "campers"[0m
Started POST "/campers" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#create as HTML
  Parameters: {"camper"=>{"active"=>"false", "first_name"=>"MyString", "last_name"=>"MyString", "parent_id"=>"980190962"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "campers" ("parent_id", "first_name", "last_name", "active", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["parent_id", 980190962], ["first_name", "MyString"], ["last_name", "MyString"], ["active", "f"], ["created_at", "2019-03-28 05:06:34.779887"], ["updated_at", "2019-03-28 05:06:34.779887"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/campers/980190963
Completed 302 Found in 8ms (ActiveRecord: 0.7ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "campers"[0m
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" ORDER BY "campers"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
CampersControllerTest: test_should_get_index
--------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/campers" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#index as HTML
  Rendering campers/index.html.erb within layouts/application
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT "campers".* FROM "campers"[0m
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered campers/index.html.erb within layouts/application (3.6ms)
Completed 200 OK in 10ms (Views: 6.3ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
CampersControllerTest: test_should_get_new
------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/campers/new" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#new as HTML
  Rendering campers/new.html.erb within layouts/application
  Rendered campers/_form.html.erb (2.4ms)
  Rendered campers/new.html.erb within layouts/application (6.8ms)
Completed 200 OK in 11ms (Views: 7.8ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
CampersControllerTest: test_should_show_camper
----------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/campers/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering campers/show.html.erb within layouts/application
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered campers/show.html.erb within layouts/application (1.2ms)
Completed 200 OK in 6ms (Views: 2.2ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CampersControllerTest: test_should_get_edit
-------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/campers/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering campers/edit.html.erb within layouts/application
  Rendered campers/_form.html.erb (2.2ms)
  Rendered campers/edit.html.erb within layouts/application (2.8ms)
Completed 200 OK in 7ms (Views: 3.8ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CampersControllerTest: test_should_update_camper
------------------------------------------------
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/campers/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampersController#update as HTML
  Parameters: {"camper"=>{"active"=>"false", "first_name"=>"MyString", "last_name"=>"MyString", "parent_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mParent Load (0.0ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/campers/980190962
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentsControllerTest: test_should_destroy_parent
-------------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "parents"[0m
Started DELETE "/parents/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "parents" WHERE "parents"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/parents
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "parents"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
ParentsControllerTest: test_should_create_parent
------------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "parents"[0m
Started POST "/parents" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#create as HTML
  Parameters: {"parent"=>{"active"=>"false", "user_id"=>"980190962"}}
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "parents" ("user_id", "active", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 980190962], ["active", "f"], ["created_at", "2019-03-28 05:06:34.846620"], ["updated_at", "2019-03-28 05:06:34.846620"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/parents/980190963
Completed 302 Found in 4ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "parents"[0m
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" ORDER BY "parents"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
ParentsControllerTest: test_should_get_index
--------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/parents" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#index as HTML
  Rendering parents/index.html.erb within layouts/application
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT "parents".* FROM "parents"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered parents/index.html.erb within layouts/application (3.0ms)
Completed 200 OK in 10ms (Views: 6.1ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
ParentsControllerTest: test_should_get_new
------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/parents/new" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#new as HTML
  Rendering parents/new.html.erb within layouts/application
  Rendered parents/_form.html.erb (1.9ms)
  Rendered parents/new.html.erb within layouts/application (6.2ms)
Completed 200 OK in 11ms (Views: 7.4ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
ParentsControllerTest: test_should_show_parent
----------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/parents/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering parents/show.html.erb within layouts/application
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered parents/show.html.erb within layouts/application (1.3ms)
Completed 200 OK in 7ms (Views: 3.0ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
ParentsControllerTest: test_should_get_edit
-------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/parents/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering parents/edit.html.erb within layouts/application
  Rendered parents/_form.html.erb (1.2ms)
  Rendered parents/edit.html.erb within layouts/application (1.7ms)
Completed 200 OK in 6ms (Views: 2.8ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
ParentsControllerTest: test_should_update_parent
------------------------------------------------
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/parents/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by ParentsController#update as HTML
  Parameters: {"parent"=>{"active"=>"false", "user_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mParent Load (0.1ms)[0m  [1m[34mSELECT  "parents".* FROM "parents" WHERE "parents"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/parents/980190962
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------
CampsControllerTest: test_should_get_new
----------------------------------------
  [1m[36mCamp Load (0.2ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camps/new" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#new as HTML
  Rendering camps/new.html.erb within layouts/application
  Rendered camps/_form.html.erb (8.5ms)
  Rendered camps/new.html.erb within layouts/application (13.5ms)
Completed 200 OK in 22ms (Views: 17.8ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------
CampsControllerTest: test_should_get_edit
-----------------------------------------
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camps/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camps/edit.html.erb within layouts/application
  Rendered camps/_form.html.erb (3.0ms)
  Rendered camps/edit.html.erb within layouts/application (3.6ms)
Completed 200 OK in 10ms (Views: 4.7ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
CampsControllerTest: test_should_show_camp
------------------------------------------
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camps/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamp Load (0.0ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camps/show.html.erb within layouts/application
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camps/show.html.erb within layouts/application (5.2ms)
Completed 200 OK in 11ms (Views: 6.1ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
CampsControllerTest: test_should_destroy_camp
---------------------------------------------
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camps"[0m
Started DELETE "/camps/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "camps" WHERE "camps"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camps
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camps"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
CampsControllerTest: test_should_update_camp
--------------------------------------------
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/camps/980190962" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#update as HTML
  Parameters: {"camp"=>{"active"=>"false", "end_date"=>"2019-03-18", "location_id"=>"980190962", "name"=>"MyString", "program"=>"MyString", "start_date"=>"2019-03-18"}, "id"=>"980190962"}
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camps/980190962
Completed 302 Found in 4ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
CampsControllerTest: test_should_create_camp
--------------------------------------------
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camps"[0m
Started POST "/camps" for 127.0.0.1 at 2019-03-28 01:06:34 -0400
Processing by CampsController#create as HTML
  Parameters: {"camp"=>{"active"=>"false", "end_date"=>"2019-03-18", "location_id"=>"980190962", "name"=>"MyString", "program"=>"MyString", "start_date"=>"2019-03-18"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "camps" ("name", "program", "start_date", "end_date", "active", "location_id", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?)[0m  [["name", "MyString"], ["program", "MyString"], ["start_date", "2019-03-18"], ["end_date", "2019-03-18"], ["active", "f"], ["location_id", 980190962], ["created_at", "2019-03-28 05:06:34.992875"], ["updated_at", "2019-03-28 05:06:34.992875"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camps/980190963
Completed 302 Found in 4ms (ActiveRecord: 0.6ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camps"[0m
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" ORDER BY "camps"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
CampsControllerTest: test_should_get_index
------------------------------------------
  [1m[36mCamp Load (0.3ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camps" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampsController#index as HTML
  Rendering camps/index.html.erb within layouts/application
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT "camps".* FROM "camps"[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camps/index.html.erb within layouts/application (2.8ms)
Completed 200 OK in 7ms (Views: 3.6ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
TasksControllerTest: test_should_get_index
------------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/tasks" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#index as HTML
  Rendering tasks/index.html.erb within layouts/application
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT "tasks".* FROM "tasks"[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mBadge Load (0.0ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered tasks/index.html.erb within layouts/application (3.7ms)
Completed 200 OK in 10ms (Views: 6.6ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------
TasksControllerTest: test_should_get_new
----------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/tasks/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#new as HTML
  Rendering tasks/new.html.erb within layouts/application
  Rendered tasks/_form.html.erb (1.9ms)
  Rendered tasks/new.html.erb within layouts/application (5.5ms)
Completed 200 OK in 10ms (Views: 6.6ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
TasksControllerTest: test_should_show_task
------------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering tasks/show.html.erb within layouts/application
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered tasks/show.html.erb within layouts/application (1.2ms)
Completed 200 OK in 6ms (Views: 2.1ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------
TasksControllerTest: test_should_get_edit
-----------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/tasks/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering tasks/edit.html.erb within layouts/application
  Rendered tasks/_form.html.erb (1.3ms)
  Rendered tasks/edit.html.erb within layouts/application (1.8ms)
Completed 200 OK in 6ms (Views: 2.8ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
TasksControllerTest: test_should_destroy_task
---------------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "tasks"[0m
Started DELETE "/tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "tasks" WHERE "tasks"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/tasks
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "tasks"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
TasksControllerTest: test_should_update_task
--------------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#update as HTML
  Parameters: {"task"=>{"badge_id"=>"980190962", "description"=>"MyText", "name"=>"MyString"}, "id"=>"980190962"}
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
TasksControllerTest: test_should_create_task
--------------------------------------------
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "tasks"[0m
Started POST "/tasks" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by TasksController#create as HTML
  Parameters: {"task"=>{"badge_id"=>"980190962", "description"=>"MyText", "name"=>"MyString"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
LocationsControllerTest: test_should_show_location
--------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/locations/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering locations/show.html.erb within layouts/application
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered locations/show.html.erb within layouts/application (4.6ms)
Completed 200 OK in 12ms (Views: 7.7ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
LocationsControllerTest: test_should_update_location
----------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/locations/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#update as HTML
  Parameters: {"location"=>{"branch_id"=>"980190962", "name"=>"MyString"}, "id"=>"980190962"}
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.0ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/locations/980190962
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
LocationsControllerTest: test_should_create_location
----------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "locations"[0m
Started POST "/locations" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#create as HTML
  Parameters: {"location"=>{"branch_id"=>"980190962", "name"=>"MyString"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "MyString"], ["branch_id", 980190962], ["created_at", "2019-03-28 05:06:35.117947"], ["updated_at", "2019-03-28 05:06:35.117947"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/locations/980190963
Completed 302 Found in 4ms (ActiveRecord: 0.7ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "locations"[0m
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
LocationsControllerTest: test_should_get_index
----------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/locations" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#index as HTML
  Rendering locations/index.html.erb within layouts/application
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT "locations".* FROM "locations"[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered locations/index.html.erb within layouts/application (3.1ms)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
LocationsControllerTest: test_should_get_new
--------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/locations/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#new as HTML
  Rendering locations/new.html.erb within layouts/application
  Rendered locations/_form.html.erb (2.2ms)
  Rendered locations/new.html.erb within layouts/application (7.1ms)
Completed 200 OK in 12ms (Views: 8.3ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
LocationsControllerTest: test_should_get_edit
---------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/locations/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering locations/edit.html.erb within layouts/application
  Rendered locations/_form.html.erb (1.0ms)
  Rendered locations/edit.html.erb within layouts/application (1.6ms)
Completed 200 OK in 6ms (Views: 2.6ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
LocationsControllerTest: test_should_destroy_location
-----------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "locations"[0m
Started DELETE "/locations/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by LocationsController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" WHERE "locations"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/locations
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "locations"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------
SkillsControllerTest: test_should_get_new
-----------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/skills/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#new as HTML
  Rendering skills/new.html.erb within layouts/application
  Rendered skills/_form.html.erb (2.1ms)
  Rendered skills/new.html.erb within layouts/application (6.8ms)
Completed 200 OK in 14ms (Views: 11.1ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
SkillsControllerTest: test_should_get_edit
------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/skills/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering skills/edit.html.erb within layouts/application
  Rendered skills/_form.html.erb (1.1ms)
  Rendered skills/edit.html.erb within layouts/application (1.6ms)
Completed 200 OK in 7ms (Views: 2.7ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
SkillsControllerTest: test_should_get_index
-------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/skills" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#index as HTML
  Rendering skills/index.html.erb within layouts/application
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills"[0m
  Rendered skills/index.html.erb within layouts/application (1.3ms)
Completed 200 OK in 6ms (Views: 2.2ms | ActiveRecord: 0.1ms)
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
SkillsControllerTest: test_should_destroy_skill
-----------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "skills"[0m
Started DELETE "/skills/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "skills" WHERE "skills"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/skills
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "skills"[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
SkillsControllerTest: test_should_create_skill
----------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "skills"[0m
Started POST "/skills" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#create as HTML
  Parameters: {"skill"=>{"category"=>"MyString", "name"=>"MyString"}}
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE LOWER("skills"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  Rendering skills/new.html.erb within layouts/application
  Rendered skills/_form.html.erb (1.5ms)
  Rendered skills/new.html.erb within layouts/application (1.7ms)
Completed 200 OK in 5ms (Views: 2.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "skills"[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
SkillsControllerTest: test_should_show_skill
--------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/skills/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mSkill Load (0.0ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering skills/show.html.erb within layouts/application
  Rendered skills/show.html.erb within layouts/application (0.7ms)
Completed 200 OK in 5ms (Views: 2.0ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
SkillsControllerTest: test_should_update_skill
----------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/skills/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by SkillsController#update as HTML
  Parameters: {"skill"=>{"category"=>"MyString", "name"=>"MyString"}, "id"=>"980190962"}
  [1m[36mSkill Load (0.0ms)[0m  [1m[34mSELECT  "skills".* FROM "skills" WHERE "skills"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE LOWER("skills"."name") = LOWER(?) AND ("skills"."id" != ?) LIMIT ?[0m  [["name", "MyString"], ["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  Rendering skills/edit.html.erb within layouts/application
  Rendered skills/_form.html.erb (1.1ms)
  Rendered skills/edit.html.erb within layouts/application (1.3ms)
Completed 200 OK in 4ms (Views: 2.2ms | ActiveRecord: 0.2ms)
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgesControllerTest: test_should_destroy_camper_camp_badge
---------------------------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badges"[0m
Started DELETE "/camper_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badges
Completed 302 Found in 3ms (ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badges"[0m
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CamperCampBadgesControllerTest: test_should_get_new
---------------------------------------------------
  [1m[36mCamperCampBadge Load (0.2ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badges/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#new as HTML
  Rendering camper_camp_badges/new.html.erb within layouts/application
  Rendered camper_camp_badges/_form.html.erb (2.2ms)
  Rendered camper_camp_badges/new.html.erb within layouts/application (6.4ms)
Completed 200 OK in 12ms (Views: 9.5ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CamperCampBadgesControllerTest: test_should_create_camper_camp_badge
--------------------------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badges"[0m
Started POST "/camper_camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#create as HTML
  Parameters: {"camper_camp_badge"=>{"camp_badge_id"=>"980190962", "camper_id"=>"980190962", "completed"=>"false"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "camper_camp_badges" ("camp_badge_id", "camper_id", "completed", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["camp_badge_id", 980190962], ["camper_id", 980190962], ["completed", "f"], ["created_at", "2019-03-28 05:06:35.275382"], ["updated_at", "2019-03-28 05:06:35.275382"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badges/980190963
Completed 302 Found in 8ms (ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badges"[0m
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" ORDER BY "camper_camp_badges"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CamperCampBadgesControllerTest: test_should_get_edit
----------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badges/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camper_camp_badges/edit.html.erb within layouts/application
  Rendered camper_camp_badges/_form.html.erb (1.6ms)
  Rendered camper_camp_badges/edit.html.erb within layouts/application (2.2ms)
Completed 200 OK in 7ms (Views: 3.2ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CamperCampBadgesControllerTest: test_should_show_camper_camp_badge
------------------------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camper_camp_badges/show.html.erb within layouts/application
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camper_camp_badges/show.html.erb within layouts/application (1.8ms)
Completed 200 OK in 6ms (Views: 2.8ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CamperCampBadgesControllerTest: test_should_update_camper_camp_badge
--------------------------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/camper_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#update as HTML
  Parameters: {"camper_camp_badge"=>{"camp_badge_id"=>"980190962", "camper_id"=>"980190962", "completed"=>"false"}, "id"=>"980190962"}
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCampBadge Load (0.0ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badges/980190962
Completed 302 Found in 4ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CamperCampBadgesControllerTest: test_should_get_index
-----------------------------------------------------
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgesController#index as HTML
  Rendering camper_camp_badges/index.html.erb within layouts/application
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT "camper_camp_badges".* FROM "camper_camp_badges"[0m
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamper Load (0.1ms)[0m  [1m[34mSELECT  "campers".* FROM "campers" WHERE "campers"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camper_camp_badges/index.html.erb within layouts/application (4.0ms)
Completed 200 OK in 8ms (Views: 4.7ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_get_edit
--------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badge_tasks/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camper_camp_badge_tasks/edit.html.erb within layouts/application
  Rendered camper_camp_badge_tasks/_form.html.erb (2.5ms)
  Rendered camper_camp_badge_tasks/edit.html.erb within layouts/application (7.1ms)
Completed 200 OK in 14ms (Views: 10.5ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_destroy_camper_camp_badge_task
------------------------------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badge_tasks"[0m
Started DELETE "/camper_camp_badge_tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badge_tasks
Completed 302 Found in 2ms (ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badge_tasks"[0m
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_get_new
-------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badge_tasks/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#new as HTML
  Rendering camper_camp_badge_tasks/new.html.erb within layouts/application
  Rendered camper_camp_badge_tasks/_form.html.erb (1.2ms)
  Rendered camper_camp_badge_tasks/new.html.erb within layouts/application (1.7ms)
Completed 200 OK in 6ms (Views: 2.7ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_update_camper_camp_badge_task
-----------------------------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/camper_camp_badge_tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#update as HTML
  Parameters: {"camper_camp_badge_task"=>{"camper_camp_badge_id"=>"980190962", "completed"=>"false", "task_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badge_tasks/980190962
Completed 302 Found in 6ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_get_index
---------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badge_tasks" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#index as HTML
  Rendering camper_camp_badge_tasks/index.html.erb within layouts/application
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks"[0m
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCamperCampBadge Load (0.0ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mTask Load (0.0ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camper_camp_badge_tasks/index.html.erb within layouts/application (3.5ms)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_create_camper_camp_badge_task
-----------------------------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badge_tasks"[0m
Started POST "/camper_camp_badge_tasks" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#create as HTML
  Parameters: {"camper_camp_badge_task"=>{"camper_camp_badge_id"=>"980190962", "completed"=>"false", "task_id"=>"980190962"}}
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "camper_camp_badge_tasks" ("camper_camp_badge_id", "task_id", "completed", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["camper_camp_badge_id", 980190962], ["task_id", 980190962], ["completed", "f"], ["created_at", "2019-03-28 05:06:35.376128"], ["updated_at", "2019-03-28 05:06:35.376128"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camper_camp_badge_tasks/980190963
Completed 302 Found in 4ms (ActiveRecord: 0.7ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camper_camp_badge_tasks"[0m
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" ORDER BY "camper_camp_badge_tasks"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTasksControllerTest: test_should_show_camper_camp_badge_task
---------------------------------------------------------------------------
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camper_camp_badge_tasks/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CamperCampBadgeTasksController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCamperCampBadgeTask Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badge_tasks".* FROM "camper_camp_badge_tasks" WHERE "camper_camp_badge_tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camper_camp_badge_tasks/show.html.erb within layouts/application
  [1m[36mCamperCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camper_camp_badges".* FROM "camper_camp_badges" WHERE "camper_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mTask Load (0.1ms)[0m  [1m[34mSELECT  "tasks".* FROM "tasks" WHERE "tasks"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camper_camp_badge_tasks/show.html.erb within layouts/application (2.0ms)
Completed 200 OK in 8ms (Views: 2.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
UsersControllerTest: test_should_create_user
--------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
Started POST "/users" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"email"=>"MyString", "first_name"=>"MyString", "last_name"=>"MyString", "password"=>"[FILTERED]", "role"=>"MyString"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "MyString"], ["password", "MyString"], ["first_name", "MyString"], ["last_name", "MyString"], ["role", "MyString"], ["created_at", "2019-03-28 05:06:35.400030"], ["updated_at", "2019-03-28 05:06:35.400030"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/users/980190963
Completed 302 Found in 3ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
UsersControllerTest: test_should_destroy_user
---------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
Started DELETE "/users/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/users
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "users"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------
UsersControllerTest: test_should_get_new
----------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/users/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#new as HTML
  Rendering users/new.html.erb within layouts/application
  Rendered users/_form.html.erb (3.9ms)
  Rendered users/new.html.erb within layouts/application (10.8ms)
Completed 200 OK in 19ms (Views: 15.4ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
UsersControllerTest: test_should_show_user
------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/users/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering users/show.html.erb within layouts/application
  Rendered users/show.html.erb within layouts/application (0.8ms)
Completed 200 OK in 7ms (Views: 2.3ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
UsersControllerTest: test_should_update_user
--------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/users/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#update as HTML
  Parameters: {"user"=>{"email"=>"MyString", "first_name"=>"MyString", "last_name"=>"MyString", "password"=>"[FILTERED]", "role"=>"MyString"}, "id"=>"980190962"}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/users/980190962
Completed 302 Found in 3ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------
UsersControllerTest: test_should_get_edit
-----------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/users/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering users/edit.html.erb within layouts/application
  Rendered users/_form.html.erb (2.1ms)
  Rendered users/edit.html.erb within layouts/application (2.9ms)
Completed 200 OK in 8ms (Views: 4.2ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------
UsersControllerTest: test_should_get_index
------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/users" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by UsersController#index as HTML
  Rendering users/index.html.erb within layouts/application
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  Rendered users/index.html.erb within layouts/application (1.6ms)
Completed 200 OK in 7ms (Views: 2.8ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
BranchesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/branches/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering branches/edit.html.erb within layouts/application
  Rendered branches/_form.html.erb (1.6ms)
  Rendered branches/edit.html.erb within layouts/application (6.6ms)
Completed 200 OK in 13ms (Views: 9.7ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
BranchesControllerTest: test_should_destroy_branch
--------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "branches"[0m
Started DELETE "/branches/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/branches
Completed 302 Found in 2ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "branches"[0m
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
BranchesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/branches" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#index as HTML
  Rendering branches/index.html.erb within layouts/application
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches"[0m
  Rendered branches/index.html.erb within layouts/application (1.4ms)
Completed 200 OK in 6ms (Views: 2.7ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
BranchesControllerTest: test_should_update_branch
-------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/branches/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#update as HTML
  Parameters: {"branch"=>{"name"=>"MyString"}, "id"=>"980190962"}
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/branches/980190962
Completed 302 Found in 2ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
BranchesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/branches/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#new as HTML
  Rendering branches/new.html.erb within layouts/application
  Rendered branches/_form.html.erb (0.9ms)
  Rendered branches/new.html.erb within layouts/application (1.5ms)
Completed 200 OK in 6ms (Views: 2.8ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
BranchesControllerTest: test_should_create_branch
-------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "branches"[0m
Started POST "/branches" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#create as HTML
  Parameters: {"branch"=>{"name"=>"MyString"}}
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "MyString"], ["created_at", "2019-03-28 05:06:35.526450"], ["updated_at", "2019-03-28 05:06:35.526450"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/branches/980190963
Completed 302 Found in 2ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "branches"[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
BranchesControllerTest: test_should_show_branch
-----------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/branches/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by BranchesController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" WHERE "branches"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering branches/show.html.erb within layouts/application
  Rendered branches/show.html.erb within layouts/application (0.6ms)
Completed 200 OK in 5ms (Views: 1.6ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_get_edit
-------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselor_camp_badges/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering counselor_camp_badges/edit.html.erb within layouts/application
  Rendered counselor_camp_badges/_form.html.erb (1.9ms)
  Rendered counselor_camp_badges/edit.html.erb within layouts/application (5.7ms)
Completed 200 OK in 13ms (Views: 8.5ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_create_counselor_camp_badge
--------------------------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselor_camp_badges"[0m
Started POST "/counselor_camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#create as HTML
  Parameters: {"counselor_camp_badge"=>{"camp_badge_id"=>"980190962", "counselor_id"=>"980190962"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_get_index
--------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselor_camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#index as HTML
  Rendering counselor_camp_badges/index.html.erb within layouts/application
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT "counselor_camp_badges".* FROM "counselor_camp_badges"[0m
  [1m[36mCampBadge Load (0.0ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCounselor Load (0.0ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCampBadge Load (0.0ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCounselor Load (0.0ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered counselor_camp_badges/index.html.erb within layouts/application (3.4ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_destroy_counselor_camp_badge
---------------------------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselor_camp_badges"[0m
Started DELETE "/counselor_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ?[0m  [["id", 980190962]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/counselor_camp_badges
Completed 302 Found in 2ms (ActiveRecord: 0.6ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "counselor_camp_badges"[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_update_counselor_camp_badge
--------------------------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/counselor_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#update as HTML
  Parameters: {"counselor_camp_badge"=>{"camp_badge_id"=>"980190962", "counselor_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/counselor_camp_badges/980190962
Completed 302 Found in 6ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_get_new
------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.2ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselor_camp_badges/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#new as HTML
  Rendering counselor_camp_badges/new.html.erb within layouts/application
  Rendered counselor_camp_badges/_form.html.erb (1.1ms)
  Rendered counselor_camp_badges/new.html.erb within layouts/application (1.6ms)
Completed 200 OK in 6ms (Views: 2.6ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------
CounselorCampBadgesControllerTest: test_should_show_counselor_camp_badge
------------------------------------------------------------------------
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/counselor_camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CounselorCampBadgesController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCounselorCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "counselor_camp_badges".* FROM "counselor_camp_badges" WHERE "counselor_camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering counselor_camp_badges/show.html.erb within layouts/application
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCounselor Load (0.1ms)[0m  [1m[34mSELECT  "counselors".* FROM "counselors" WHERE "counselors"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered counselor_camp_badges/show.html.erb within layouts/application (2.2ms)
Completed 200 OK in 7ms (Views: 3.2ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CampBadgesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#index as HTML
  Rendering camp_badges/index.html.erb within layouts/application
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT "camp_badges".* FROM "camp_badges"[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 298486374], ["LIMIT", 1]]
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camp_badges/index.html.erb within layouts/application (7.7ms)
Completed 200 OK in 14ms (Views: 10.1ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
CampBadgesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camp_badges/new" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#new as HTML
  Rendering camp_badges/new.html.erb within layouts/application
  Rendered camp_badges/_form.html.erb (1.7ms)
  Rendered camp_badges/new.html.erb within layouts/application (5.4ms)
Completed 200 OK in 10ms (Views: 6.9ms | ActiveRecord: 0.0ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
CampBadgesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camp_badges/980190962/edit" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#edit as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camp_badges/edit.html.erb within layouts/application
  Rendered camp_badges/_form.html.erb (1.1ms)
  Rendered camp_badges/edit.html.erb within layouts/application (1.7ms)
Completed 200 OK in 6ms (Views: 2.7ms | ActiveRecord: 0.1ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgesControllerTest: test_should_create_camp_badge
-------------------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camp_badges"[0m
Started POST "/camp_badges" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#create as HTML
  Parameters: {"camp_badge"=>{"badge_id"=>"980190962", "camp_id"=>"980190962"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "camp_badges" ("badge_id", "camp_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["badge_id", 980190962], ["camp_id", 980190962], ["created_at", "2019-03-28 05:06:35.660985"], ["updated_at", "2019-03-28 05:06:35.660985"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camp_badges/980190963
Completed 302 Found in 4ms (ActiveRecord: 0.6ms)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camp_badges"[0m
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" ORDER BY "camp_badges"."id" DESC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampBadgesControllerTest: test_should_show_camp_badge
-----------------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started GET "/camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#show as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendering camp_badges/show.html.erb within layouts/application
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  Rendered camp_badges/show.html.erb within layouts/application (2.4ms)
Completed 200 OK in 7ms (Views: 3.6ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgesControllerTest: test_should_destroy_camp_badge
--------------------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "camp_badges"[0m
Started DELETE "/camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#destroy as HTML
  Parameters: {"id"=>"980190962"}
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgesControllerTest: test_should_update_camp_badge
-------------------------------------------------------
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
Started PATCH "/camp_badges/980190962" for 127.0.0.1 at 2019-03-28 01:06:35 -0400
Processing by CampBadgesController#update as HTML
  Parameters: {"camp_badge"=>{"badge_id"=>"980190962", "camp_id"=>"980190962"}, "id"=>"980190962"}
  [1m[36mCampBadge Load (0.1ms)[0m  [1m[34mSELECT  "camp_badges".* FROM "camp_badges" WHERE "camp_badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" WHERE "badges"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[36mCamp Load (0.1ms)[0m  [1m[34mSELECT  "camps".* FROM "camps" WHERE "camps"."id" = ? LIMIT ?[0m  [["id", 980190962], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Redirected to http://www.example.com/camp_badges/980190962
Completed 302 Found in 5ms (ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.7ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
SkillTest: test_: Skill should assert that two skills cannot have the same name. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
SkillTest: test_: Skill should assert that two skills cannot have the same name. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
SkillTest: test_: Skill should verify number of badges method works. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
SkillTest: test_: Skill should verify number of badges method works. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
SkillTest: test_: Skill should verify number of badges method works. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (2.0ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
BadgeTest: test_: Badge should require case sensitive unique value for name. 
-----------------------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should have many camps. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
BadgeTest: test_: Badge should require case sensitive unique value for name. 
-----------------------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.6ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
BadgeTest: test_: Badge should require case sensitive unique value for name. 
-----------------------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
BadgeTest: test_: Badge should require case sensitive unique value for name. 
-----------------------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
BranchTest: test_: Branch should require case sensitive unique value for name. 
-------------------------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "MyString"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.5ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.7ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.5ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require skill_id to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.1ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "mYsTRING"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.2ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m

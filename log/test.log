  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "level" integer, "description" text, "skill_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_badges_on_skill_id" ON "badges" ("skill_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "branches" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "badge_id" integer, "camp_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_badge_id" ON "camp_badges" ("badge_id")[0m
  [1m[35m (0.6ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_camp_id" ON "camp_badges" ("camp_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camper_camp_badge_id" integer, "task_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks" ("camper_camp_badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks" ("task_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "camper_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges" ("camper_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "campers" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "parent_id" integer, "first_name" varchar, "last_name" varchar, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE  INDEX "index_campers_on_parent_id" ON "campers" ("parent_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps"[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "camps" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "program" varchar, "start_date" date, "end_date" date, "active" boolean, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX "index_camps_on_location_id" ON "camps" ("location_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges"[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "counselor_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges" ("counselor_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_counselors_on_user_id" ON "counselors" ("user_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "locations" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "branch_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE  INDEX "index_locations_on_branch_id" ON "locations" ("branch_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents"[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "parents" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE  INDEX "index_parents_on_user_id" ON "parents" ("user_id")[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "skills" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "category" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "description" text, "badge_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_tasks_on_badge_id" ON "tasks" ("badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users"[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password_digest" varchar, "first_name" varchar, "last_name" varchar, "role" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190325042954)[0m
  [1m[35m (18.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171120),
(20190318171158),
(20190318171031),
(20190318171116),
(20190318171054),
(20190318171110),
(20190318171006),
(20190318171020),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (4.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-04-01 23:48:00.386436"], ["updated_at", "2019-04-01 23:48:00.386436"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (2.4ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
SkillTest: test_: Skill should verify the alphabetical scope works. 
--------------------------------------------------------------------
  [1m[36mSkill Load (0.5ms)[0m  [1m[34mSELECT "skills".* FROM "skills" ORDER BY name[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$mu9LnDLBvgDnl9k2sys9sOwEGCvG51R4yzCn7.Cx6r/cllsHh1t26"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.324842"], ["updated_at", "2019-04-01 23:48:28.324842"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$QeL3daO.p8JkEJQRdKKLiumaurDmFGbxKW5EZafptknOZxmu2GPRS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.357814"], ["updated_at", "2019-04-01 23:48:28.357814"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$ezwEXJtMbL8wXMqcRUIbKOf1h/jIbPyPqmkixhNbPlOdkOy2TumKK"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.365116"], ["updated_at", "2019-04-01 23:48:28.365116"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (1.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (9.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$crKT4rtvElhHP1scDpDN6eyf7SD7lMwPgRf4/OriRxGjV/dCYB.E."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.439147"], ["updated_at", "2019-04-01 23:48:28.439147"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$kXytTevP9IkkklfMHNfjL.19RyBO2jgp8wTfZeRZNKSjXOsPpPlu."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.464598"], ["updated_at", "2019-04-01 23:48:28.464598"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$yhEfMzBdwHggPVUsyZXUYe80Q0fGbfO9bRmU0PkZ5nYB8j46DQ312"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.470994"], ["updated_at", "2019-04-01 23:48:28.470994"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (16.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$xVRnd8ZzuHPZLWznVh2HweMN1xKnmtrKR/x8n4nGlSAirIvAi7ZO2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.570511"], ["updated_at", "2019-04-01 23:48:28.570511"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$PG4pB.8UXvhUH6V4/hczMu7rYKbvbaKmVNE.OG2evEKHyPIXa1cxC"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.579564"], ["updated_at", "2019-04-01 23:48:28.579564"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.4ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$zNvdYBkAQZ2kq/.nSWvfhedsBB460mKGtXj4smLeg6ENN3fnSFDX6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.596698"], ["updated_at", "2019-04-01 23:48:28.596698"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be at least eight characters. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$/LdVjNBYesYcoctCFZ5P1O8.t2DNlcgh87orlpnbJnXel6V0zDOgy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.621488"], ["updated_at", "2019-04-01 23:48:28.621488"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$PBtmWCNRxk4xXCH.zomkNOmb2BjhzqZsUfEvTgC2RTGVlEXHj.mPC"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.630243"], ["updated_at", "2019-04-01 23:48:28.630243"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$VCBmueRqFPkRO.m/059Hvuy7Q1Bu2XY0HqpUtlGhtHCJxCIWd1g4W"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.648738"], ["updated_at", "2019-04-01 23:48:28.648738"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$yLKIdQDFRpbIkM5ZE.CifOBQ2iUegiee87c0aj9ewzoZTpEDbO0wO"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.750289"], ["updated_at", "2019-04-01 23:48:28.750289"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$k2C/3EKkq3ziA50SW4biVu0bjagh87b6gqA3gpNEPtlDMxHmzE1Su"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.781378"], ["updated_at", "2019-04-01 23:48:28.781378"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$7ItbbR5Xm9q5/Nrmr0Epeep8rsrMJo6JuYf7vnjS/VWZWhIHEWBXS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.819909"], ["updated_at", "2019-04-01 23:48:28.819909"]]
  [1m[35m (2.4ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$wPHK5vo6tpYfaw1ZJuQZdu9iSjDEZIjqWhuxERXA58HmQW4.jaGw2"], ["created_at", "2019-04-01 23:48:28.864852"], ["updated_at", "2019-04-01 23:48:28.864852"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$digEyW/o/kvpOC3mzEcSsun96pwTf.qMmcPe8efaUX7LtEJITWkym"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:48:28.920494"], ["updated_at", "2019-04-01 23:48:28.920494"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$fQTxJJzhOd8M3HQ00ybaEOqkhkqcoXLj1DSC8ojO9Qu9JKpGN73Fu"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:48:28.944750"], ["updated_at", "2019-04-01 23:48:28.944750"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$1R/MadRaEf8hpf9kPz7O4uygZ4mnMg8HAVvSv6Glr3ivaVFcLtOem"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:48:28.953173"], ["updated_at", "2019-04-01 23:48:28.953173"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.9ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (1.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.8ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (15.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (20.9ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:48:29.563821"], ["updated_at", "2019-04-01 23:48:29.563821"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:48:29.569736"], ["updated_at", "2019-04-01 23:48:29.569736"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:48:29.611751"], ["updated_at", "2019-04-01 23:48:29.611751"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:48:29.654571"], ["updated_at", "2019-04-01 23:48:29.654571"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:48:29.661297"], ["updated_at", "2019-04-01 23:48:29.661297"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:48:29.685385"], ["updated_at", "2019-04-01 23:48:29.685385"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:48:29.725583"], ["updated_at", "2019-04-01 23:48:29.725583"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:48:29.959655"], ["updated_at", "2019-04-01 23:48:29.959655"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (3.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.3ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (3.0ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:48:30.025893"], ["updated_at", "2019-04-01 23:48:30.025893"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (4.5ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------------------------------------------------
LocationTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-------------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:48:30.056355"], ["updated_at", "2019-04-01 23:48:30.056355"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:48:30.062892"], ["updated_at", "2019-04-01 23:48:30.062892"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:48:30.070660"], ["updated_at", "2019-04-01 23:48:30.070660"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:48:30.096467"], ["updated_at", "2019-04-01 23:48:30.096467"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:48:30.102344"], ["updated_at", "2019-04-01 23:48:30.102344"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (3.3ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:48:30.111027"], ["updated_at", "2019-04-01 23:48:30.111027"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:48:30.136155"], ["updated_at", "2019-04-01 23:48:30.136155"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:48:30.144332"], ["updated_at", "2019-04-01 23:48:30.144332"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:48:30.150061"], ["updated_at", "2019-04-01 23:48:30.150061"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:48:30.155392"], ["updated_at", "2019-04-01 23:48:30.155392"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:48:30.169314"], ["updated_at", "2019-04-01 23:48:30.169314"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:48:30.175100"], ["updated_at", "2019-04-01 23:48:30.175100"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (1.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$gUe74zhgkCKunX/xq0k8nOo1Ur8CnDAqCE6R5c.l1VHDPLN.V6Df2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.463753"], ["updated_at", "2019-04-01 23:49:22.463753"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$pAF/0DVvKK1OkxoPT9i2wu3nzoTyKAWgaIeeDhuiI1jBbbPWqlgkW"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.469259"], ["updated_at", "2019-04-01 23:49:22.469259"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$YtKbWTYz5o8meEG8ny2vHOj8UkzaGiQGWknPfBMSV3C48rMEjQTdm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.473569"], ["updated_at", "2019-04-01 23:49:22.473569"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$jcdIJSoFa0EhltExhBuUWuirTJgFenqoSRigCErk5u5dwvysbftsC"], ["created_at", "2019-04-01 23:49:22.522406"], ["updated_at", "2019-04-01 23:49:22.522406"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$M0.33P4XtuofoSoikdkPmuzAeTuoSP5hzvj4sng4jEYWzSin0DbZi"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.552844"], ["updated_at", "2019-04-01 23:49:22.552844"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$PxjtDJpa7CSA62ZAkxADOuyrNixNoEK2cjCACyl8DneuGOG7rYAjq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.559321"], ["updated_at", "2019-04-01 23:49:22.559321"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$FzQzYr9i1s/dRlyDvp31g.Oo61iliQW2BEL9VfK7i38IGUW67DCT6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.564055"], ["updated_at", "2019-04-01 23:49:22.564055"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be at least eight characters. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$eqI3tz7U0R81tZfPPAM1xe6h55Xul123uRYrvf88HZJkfrUpm.802"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.575244"], ["updated_at", "2019-04-01 23:49:22.575244"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$Wi1sr4Jon/Mb/.WY62YNteyGZLFTbTKo8mphpAqH6tnbB8lgW077O"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.580215"], ["updated_at", "2019-04-01 23:49:22.580215"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$uA6oxi7Y4/kP4YapHDpl4.v/e2SKUo3IsZ78Vctw1tZff.ly8wHHK"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.584629"], ["updated_at", "2019-04-01 23:49:22.584629"]]
  [1m[35m (0.3ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$9H4H.Jx.PwVAMeNX1WI.5OrPa8xeVPLAW6M3Gut6rZx6.Hbkx5uh."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.602052"], ["updated_at", "2019-04-01 23:49:22.602052"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$9PUIJeOpZliZ2p9EdYi8pu4VbvxhP.idUna8H16LAqUoWGbG.Rcwq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.606958"], ["updated_at", "2019-04-01 23:49:22.606958"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$XFILLcZ4G0YYsPnuQXeNsO5.EugrSoCIVHj.8XPzVzWPr85BBXezq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.613483"], ["updated_at", "2019-04-01 23:49:22.613483"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$RdoZnf2ISuL7dgDxfD9d1uXJIlEnem6lAdHpDg.D1VK6jPAV2v/iO"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.639001"], ["updated_at", "2019-04-01 23:49:22.639001"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$4cXJ2PQ3KyCueDdMG2N/8.AQ8cilvyhjW/KWMWN6e13Pzl9TAAlf2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.643601"], ["updated_at", "2019-04-01 23:49:22.643601"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$o3YGma0Re.G/NLO/PeYfD.ig2PRjKKqsf.vHaK66FhU1NQ6QNjPNa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.649587"], ["updated_at", "2019-04-01 23:49:22.649587"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$ROU.BBeXzcrrCtlu2juYteovs9rLGfnYA.7vLgIeI6ogjNdb55VoW"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:49:22.699407"], ["updated_at", "2019-04-01 23:49:22.699407"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$W9/2q2l5bPGaM5HmYnQKS.JFZT30jDz1Jtv0a6yDF3QloQoiVJo26"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:49:22.704168"], ["updated_at", "2019-04-01 23:49:22.704168"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$RilWVMLQSMvYIvNdJEpXUeg0xkRlwqDgKA5KhQ1qPrAP6gdm/XRhS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:49:22.709623"], ["updated_at", "2019-04-01 23:49:22.709623"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:49:22.789408"], ["updated_at", "2019-04-01 23:49:22.789408"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:49:22.793330"], ["updated_at", "2019-04-01 23:49:22.793330"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:49:22.796533"], ["updated_at", "2019-04-01 23:49:22.796533"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:49:22.814153"], ["updated_at", "2019-04-01 23:49:22.814153"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:49:22.821939"], ["updated_at", "2019-04-01 23:49:22.821939"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:49:22.826184"], ["updated_at", "2019-04-01 23:49:22.826184"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:49:22.831060"], ["updated_at", "2019-04-01 23:49:22.831060"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:49:22.943427"], ["updated_at", "2019-04-01 23:49:22.943427"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------------------------------------------------
LocationTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-------------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:49:22.984458"], ["updated_at", "2019-04-01 23:49:22.984458"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:49:22.987504"], ["updated_at", "2019-04-01 23:49:22.987504"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:49:22.991696"], ["updated_at", "2019-04-01 23:49:22.991696"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:49:23.008403"], ["updated_at", "2019-04-01 23:49:23.008403"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:49:23.012251"], ["updated_at", "2019-04-01 23:49:23.012251"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:49:23.015212"], ["updated_at", "2019-04-01 23:49:23.015212"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:49:23.035939"], ["updated_at", "2019-04-01 23:49:23.035939"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:49:23.049011"], ["updated_at", "2019-04-01 23:49:23.049011"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:49:23.055952"], ["updated_at", "2019-04-01 23:49:23.055952"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:49:23.060090"], ["updated_at", "2019-04-01 23:49:23.060090"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:49:23.064544"], ["updated_at", "2019-04-01 23:49:23.064544"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:49:23.071195"], ["updated_at", "2019-04-01 23:49:23.071195"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:49:23.074738"], ["updated_at", "2019-04-01 23:49:23.074738"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------------------------------------------------
LocationTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-------------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:50:39.087902"], ["updated_at", "2019-04-01 23:50:39.087902"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:50:39.094781"], ["updated_at", "2019-04-01 23:50:39.094781"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:50:39.097301"], ["updated_at", "2019-04-01 23:50:39.097301"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:50:39.100542"], ["updated_at", "2019-04-01 23:50:39.100542"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:50:39.104393"], ["updated_at", "2019-04-01 23:50:39.104393"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:50:39.107556"], ["updated_at", "2019-04-01 23:50:39.107556"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:50:39.127964"], ["updated_at", "2019-04-01 23:50:39.127964"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (2.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:50:39.142179"], ["updated_at", "2019-04-01 23:50:39.142179"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:50:39.145240"], ["updated_at", "2019-04-01 23:50:39.145240"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:50:39.148194"], ["updated_at", "2019-04-01 23:50:39.148194"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:50:39.151074"], ["updated_at", "2019-04-01 23:50:39.151074"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:50:39.155422"], ["updated_at", "2019-04-01 23:50:39.155422"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:50:39.160278"], ["updated_at", "2019-04-01 23:50:39.160278"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$RAN6251.elCcbdvnifAB3.5Cx9J6ZTyyZDsiUct2ecGlbkqT7XDLu"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.209856"], ["updated_at", "2019-04-01 23:50:39.209856"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$tN7bCGUT5gaCpCgwU5Kkv.mEmf4yuuXhVfMnCHGhULNJ6plFpJ3iq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.214497"], ["updated_at", "2019-04-01 23:50:39.214497"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$04eLbeGEP5abbXQnvQbPo.YKrisEqczmXNX.N0BR7dELfJEnuRII."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.219270"], ["updated_at", "2019-04-01 23:50:39.219270"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$rmjxown7juC96w4VV9g4aORP6z9Fw0HMIwUwcvR2rbGa0XaBWdeoy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.249447"], ["updated_at", "2019-04-01 23:50:39.249447"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$d0zoiSHwHB7qtY.XPDDObOrV5f8AjFMJVbv6vaWPEEZQqFZCiZm6S"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.254741"], ["updated_at", "2019-04-01 23:50:39.254741"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$MtA2LM2XMChA9VbRJbE9Euxw2e7B5UVJLUIct3OfxmST7qcwiHese"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.259078"], ["updated_at", "2019-04-01 23:50:39.259078"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.9ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.6ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$h21j7Gnu/M4CYt2OZsQKBuz.LSO.Cz0R9NJ8UIzDLo83cFRDHbmdS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.279465"], ["updated_at", "2019-04-01 23:50:39.279465"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$pk9315Cmnr1Ua9GiuZuyGORCIr7ub5ejhNe9CGk8Wn4tCp49YRL9e"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.284655"], ["updated_at", "2019-04-01 23:50:39.284655"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$TzfYEq8HDSciFOJZAZm6B.0Iu/MaH.hL/nYsD6FsJvb.mAFiOV5Ym"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.289206"], ["updated_at", "2019-04-01 23:50:39.289206"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$AnhsvJKnbaEConDGD6luye5IrC1ml7dk/AxwbYlBN500Gd93sWEJe"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.341472"], ["updated_at", "2019-04-01 23:50:39.341472"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$iOXPQnqyboFbdmWLcMnI2etaGawTh4yDm9L6BnncYIXvbGJiVOiBm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.346402"], ["updated_at", "2019-04-01 23:50:39.346402"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$YxG0CBiOotnS0k5XzeVFbeV3JsZh3QwwcB2rMlVP86F9gFudcsdai"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.350839"], ["updated_at", "2019-04-01 23:50:39.350839"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$nuuAirPlItouae65MOsw9ecb6FcuGD2YqYLgb8ISzuAwyYoRyiG0W"], ["created_at", "2019-04-01 23:50:39.365056"], ["updated_at", "2019-04-01 23:50:39.365056"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$6EGGQ1jPmPV7jmqOSLA9NO7wo/CeNzcXLC3qxAip.b.xtSA7s5Qaq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.381953"], ["updated_at", "2019-04-01 23:50:39.381953"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$Whj3pYPfjxpSY/YbIg.CsOOwxC2/fAMYSKh6iv4Ix2jHx2vlB/zYm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.387990"], ["updated_at", "2019-04-01 23:50:39.387990"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$rvxzcc445kiYULHgw4GlbOs8t3qnbJVqzMz.H/P.cf2NAy3gBjLDS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.393069"], ["updated_at", "2019-04-01 23:50:39.393069"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be at least eight characters. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$4QiiCfn4gDberC6fHlUDLugoZyP8befvhK3ZLs0wjV/ca2Kx7xNkS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:50:39.428129"], ["updated_at", "2019-04-01 23:50:39.428129"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$WSkGo1rqZg0sa8/DKi/7PuaMz./zfdz3vkCfZSzWd.JgjOLkG/x1e"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:50:39.432925"], ["updated_at", "2019-04-01 23:50:39.432925"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$xTu2zf.2V5Pq0KAglpaBg.UbEtNuaiS4MMnswhUdeJwhAWpy73E/i"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:50:39.437869"], ["updated_at", "2019-04-01 23:50:39.437869"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:50:39.530583"], ["updated_at", "2019-04-01 23:50:39.530583"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:50:39.540287"], ["updated_at", "2019-04-01 23:50:39.540287"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:50:39.543102"], ["updated_at", "2019-04-01 23:50:39.543102"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:50:39.546445"], ["updated_at", "2019-04-01 23:50:39.546445"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:50:39.553854"], ["updated_at", "2019-04-01 23:50:39.553854"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:50:39.559978"], ["updated_at", "2019-04-01 23:50:39.559978"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:50:39.562791"], ["updated_at", "2019-04-01 23:50:39.562791"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.2ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:50:39.648324"], ["updated_at", "2019-04-01 23:50:39.648324"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:14.751661"], ["updated_at", "2019-04-01 23:51:14.751661"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (1.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (2.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:14.796414"], ["updated_at", "2019-04-01 23:51:14.796414"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:14.801167"], ["updated_at", "2019-04-01 23:51:14.801167"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:14.804111"], ["updated_at", "2019-04-01 23:51:14.804111"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:51:14.807288"], ["updated_at", "2019-04-01 23:51:14.807288"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:51:14.814094"], ["updated_at", "2019-04-01 23:51:14.814094"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:51:14.818842"], ["updated_at", "2019-04-01 23:51:14.818842"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:14.841312"], ["updated_at", "2019-04-01 23:51:14.841312"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:14.886896"], ["updated_at", "2019-04-01 23:51:14.886896"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:14.890486"], ["updated_at", "2019-04-01 23:51:14.890486"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:14.893256"], ["updated_at", "2019-04-01 23:51:14.893256"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:14.907672"], ["updated_at", "2019-04-01 23:51:14.907672"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:14.910495"], ["updated_at", "2019-04-01 23:51:14.910495"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:14.913161"], ["updated_at", "2019-04-01 23:51:14.913161"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:14.924172"], ["updated_at", "2019-04-01 23:51:14.924172"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$2qpRRSJbvtKyetpGTFNrjum4Wb3dT77hDQFQD8H4hPl0hoCzAkNWy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:14.960517"], ["updated_at", "2019-04-01 23:51:14.960517"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$NR0y7cx3IFavK5BMlOI/Fu9XqnPQ1dfo1k7QxI0S0pN2CIa8oQWJO"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:14.967034"], ["updated_at", "2019-04-01 23:51:14.967034"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$/iBLebhJT05jI.NixBf0g.LGXsTW67PB3un5njvmkDVOpL.GFc6um"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:14.976069"], ["updated_at", "2019-04-01 23:51:14.976069"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$Jd9VTGVYbm9HqlLn3XAfpeKZRvEYavMFvAd13nra.keFNtcI1JYg."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:14.987327"], ["updated_at", "2019-04-01 23:51:14.987327"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$fbvQseYxYPYaDSwDJixvMOczo.t2cnafABgDVcvRz1/yPJLzd2nXK"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:14.996357"], ["updated_at", "2019-04-01 23:51:14.996357"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$7gd9uSS8RI7IXk9N9Qp0x.hphZnqKziREnlENenGMVkTcwxEg4SHK"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:15.002168"], ["updated_at", "2019-04-01 23:51:15.002168"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be at least eight characters. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$f0U0I55kd4bmsHcY3K05H.XMMWpzzYV1d7ToElHB03DJDJltR6/.y"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:15.023654"], ["updated_at", "2019-04-01 23:51:15.023654"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$nNQFIW3qi8Pt3vnVQH7sROj37WC15G./SrKotvuHBD4BJK559EqGC"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:15.028570"], ["updated_at", "2019-04-01 23:51:15.028570"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$IpOQpyUryoknYICauiFjAO/sJg3uj6hFHzgij03ndJuNmCXhqwDTy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:15.035240"], ["updated_at", "2019-04-01 23:51:15.035240"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$7F3bKsxgUqWwyvVYS9YoweINT3L7cm9SCoVW4D/aDyDiMqXTBawFy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:15.052324"], ["updated_at", "2019-04-01 23:51:15.052324"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$V.MAjHG55YWIgnpGJYMD6eZHhW8hMZtFvJRbabrgpTkGXVL4RVgDG"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:15.057390"], ["updated_at", "2019-04-01 23:51:15.057390"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$Dly98.1Fc6v.6m9EdFiAbOZq.5a9cZdoABGM/w2lCgL/WPAG/hg0y"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:15.062391"], ["updated_at", "2019-04-01 23:51:15.062391"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$spebl2d9iLWdGhjSMjXHDuf6BNVsMP2eQAKSpnn5Ny9qqo4H6W9Sq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:15.129580"], ["updated_at", "2019-04-01 23:51:15.129580"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$mNmctA6c.RW.rr6jwQ/o6OmLY4PKFqXjI05/ZOEndMirkDKY9h0xa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:15.134490"], ["updated_at", "2019-04-01 23:51:15.134490"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$TofDqX25jSQb/GjPbZxHX.ZFGaAMmDqJrEMTQpRWJeXbuS/yxuU0S"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:15.141447"], ["updated_at", "2019-04-01 23:51:15.141447"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (1.8ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$pYmztQBcRxx/sPxJDKX9fuNhBxO0vNH/ldewt6HBs4cJowRbvTfsi"], ["created_at", "2019-04-01 23:51:15.163499"], ["updated_at", "2019-04-01 23:51:15.163499"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$Vpo6qoZWqg35lJt/RPx2ve5QAIop3EZA777tt.D/fwiN0DM4K7xsa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:15.193902"], ["updated_at", "2019-04-01 23:51:15.193902"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$.PYP5MmjIbS5kGz1FGMTw.HCWvmrj3DYvzYWhrMtQHNVRicNob1Oa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:15.198774"], ["updated_at", "2019-04-01 23:51:15.198774"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$Qas8iyMSjzFDfsotPrL9s.pdS/w71/zXHEwfCdKzlX8I4Au68bRz6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:15.203043"], ["updated_at", "2019-04-01 23:51:15.203043"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (2.8ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:39.524986"], ["updated_at", "2019-04-01 23:51:39.524986"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:40.132486"], ["updated_at", "2019-04-01 23:51:40.132486"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:40.138498"], ["updated_at", "2019-04-01 23:51:40.138498"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:40.141518"], ["updated_at", "2019-04-01 23:51:40.141518"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-01 23:51:40.147797"], ["updated_at", "2019-04-01 23:51:40.147797"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-01 23:51:40.152932"], ["updated_at", "2019-04-01 23:51:40.152932"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-01 23:51:40.156328"], ["updated_at", "2019-04-01 23:51:40.156328"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.1ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$B0dguICThQJ6C9.z48ev8eSIztlOyov5wFBr/1Hv/JLa.rFK6U2nK"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:40.237127"], ["updated_at", "2019-04-01 23:51:40.237127"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$.k9vJOpsAyVzav6JcD84v.bhFAUeHeRkld9B3itJMGJCQk7/BAyS."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:40.245857"], ["updated_at", "2019-04-01 23:51:40.245857"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$Y74y2tSvALT1j/Lbnuu/nOJd/9MInSC9h0AOObhK3zdd5S04ypzq2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:40.252503"], ["updated_at", "2019-04-01 23:51:40.252503"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$NIzNc88EJ/RbbpVBH1EnU.CygF/pTHQYCGoTj128xiOmVNwWojJdm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:40.282755"], ["updated_at", "2019-04-01 23:51:40.282755"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$LnDMO5IDLgz/yYax.hoOouHZz80y/Xuo91.2ma.aOQvshCGKkCpSi"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:40.288930"], ["updated_at", "2019-04-01 23:51:40.288930"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$dEoK7m.COaMdz439874/7exxuZkC4E9qK3P5AFgVBNsuPNannWNwm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:40.295154"], ["updated_at", "2019-04-01 23:51:40.295154"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$Neb6a/XCRM1El8Y2U66vZOq6ECK47EEBJULmA0Z/2UibUZfF7trL6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:40.350442"], ["updated_at", "2019-04-01 23:51:40.350442"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$0iZVUlnUQgF.8V9njDTyD.nzwz9NlLjP1gAO3iHbSXegX3/eb.CIy"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:40.355346"], ["updated_at", "2019-04-01 23:51:40.355346"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$BzM/JSr8bQRbZDfYaqXDlOC4IWnRJykg6FuTaxqqh7qPBcYumew4i"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:40.361656"], ["updated_at", "2019-04-01 23:51:40.361656"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$gRHXA8qAx2w2uYVldx1HHOg3Mf4Pfd2IdpNA.cGgcU/X.9mx769Ya"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:40.393193"], ["updated_at", "2019-04-01 23:51:40.393193"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$nK.cqREli8YzTkeAaOH8IuHEcY09Jrt4j5z8jLKES0p5DQntRPUem"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:40.397581"], ["updated_at", "2019-04-01 23:51:40.397581"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$iADMU..FzetCN.smmpLP8.Smk/Au628fHvyw79Wn7vIfi50o416Qi"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:40.404196"], ["updated_at", "2019-04-01 23:51:40.404196"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$S9qLKXN0tJDVJjHD7IorfOGHF3gfNS7iBRoEkJpF3U9lG1kgdAuN2"], ["created_at", "2019-04-01 23:51:40.432263"], ["updated_at", "2019-04-01 23:51:40.432263"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$vFiQMQq3OyQ8KkYipOhtvuP9eKvANkvThsLfHqBmk.lr.Yl.5gLxa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-01 23:51:40.468123"], ["updated_at", "2019-04-01 23:51:40.468123"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$sItDU6MKDgqBvTkbS01y2.jgUvt9lNrkgVF7wZ5Yw0jDabfp.au5i"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-01 23:51:40.475482"], ["updated_at", "2019-04-01 23:51:40.475482"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$jdlZB6HrO9DePseLLmRHiua8q1.L9W67lLfubRGL5IXRe6CRtprWG"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-01 23:51:40.481005"], ["updated_at", "2019-04-01 23:51:40.481005"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:40.577211"], ["updated_at", "2019-04-01 23:51:40.577211"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:40.581141"], ["updated_at", "2019-04-01 23:51:40.581141"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:40.589377"], ["updated_at", "2019-04-01 23:51:40.589377"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:40.608441"], ["updated_at", "2019-04-01 23:51:40.608441"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-01 23:51:40.615884"], ["updated_at", "2019-04-01 23:51:40.615884"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-01 23:51:40.619137"], ["updated_at", "2019-04-01 23:51:40.619137"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-01 23:51:40.621891"], ["updated_at", "2019-04-01 23:51:40.621891"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.5ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-01 23:51:40.752122"], ["updated_at", "2019-04-01 23:51:40.752122"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "level" integer, "description" text, "skill_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_badges_on_skill_id" ON "badges" ("skill_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches"[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "branches" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "badge_id" integer, "camp_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_badge_id" ON "camp_badges" ("badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camp_badges_on_badge_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_camp_badges_on_camp_id" ON "camp_badges" ("camp_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camper_camp_badge_id" integer, "task_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks" ("camper_camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badge_tasks_on_camper_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks" ("task_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "camper_id" integer, "completed" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_camper_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges" ("camper_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "campers" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "parent_id" integer, "first_name" varchar, "last_name" varchar, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_campers_on_parent_id" ON "campers" ("parent_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps"[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "camps" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "program" varchar, "start_date" date, "end_date" date, "active" boolean, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_camps_on_location_id" ON "camps" ("location_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "camp_badge_id" integer, "counselor_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges" ("camp_badge_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_counselor_camp_badges_on_camp_badge_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges" ("counselor_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX "index_counselors_on_user_id" ON "counselors" ("user_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "locations" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "branch_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_locations_on_branch_id" ON "locations" ("branch_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents"[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "parents" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "active" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_parents_on_user_id" ON "parents" ("user_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills"[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "skills" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "category" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "description" text, "badge_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX "index_tasks_on_badge_id" ON "tasks" ("badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password_digest" varchar, "first_name" varchar, "last_name" varchar, "role" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190325042954)[0m
  [1m[35m (1.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171120),
(20190318171158),
(20190318171031),
(20190318171116),
(20190318171054),
(20190318171110),
(20190318171006),
(20190318171020),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-04-02 00:12:14.336611"], ["updated_at", "2019-04-02 00:12:14.336611"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.1ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-02 00:12:16.059807"], ["updated_at", "2019-04-02 00:12:16.059807"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-02 00:12:16.104183"], ["updated_at", "2019-04-02 00:12:16.104183"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-02 00:12:16.108930"], ["updated_at", "2019-04-02 00:12:16.108930"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-02 00:12:16.112962"], ["updated_at", "2019-04-02 00:12:16.112962"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.5ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-02 00:12:16.132066"], ["updated_at", "2019-04-02 00:12:16.132066"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-02 00:12:16.140413"], ["updated_at", "2019-04-02 00:12:16.140413"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-02 00:12:16.144546"], ["updated_at", "2019-04-02 00:12:16.144546"]]
  [1m[35m (0.3ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-02 00:12:16.151900"], ["updated_at", "2019-04-02 00:12:16.151900"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$b/1/1NyjRbV1lIIp9UP.T.6JSflsVl8cvo3UW1HnyHpur/lco3rpS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-02 00:12:16.301636"], ["updated_at", "2019-04-02 00:12:16.301636"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$J/0ubld.A1iwn20rfPqUfe2AZYseD02/af5S.XzY0wzJr0VTh2Vo6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-02 00:12:16.309162"], ["updated_at", "2019-04-02 00:12:16.309162"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$w8yACUu2rdxEqIP8RMRU8uKeiwdWO39hm4Qt3.MFCyJMG1dJ17s1K"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-02 00:12:16.316700"], ["updated_at", "2019-04-02 00:12:16.316700"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.7ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$8mb.p58XFfYH4vP0CqAzaOHd3lcNLAd32NDus.MUZUi.I9zq.ncnm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-02 00:12:16.337497"], ["updated_at", "2019-04-02 00:12:16.337497"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$BTvbpYUhCVLnykkhFDAc5ullxe5u682731Wm40Gak5BSVNVCFyBXu"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-02 00:12:16.342048"], ["updated_at", "2019-04-02 00:12:16.342048"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$1R3Z64sVtxWYAANUhnnpYuK6n5BYA.x/x8WjvmbgMgUl5M7GoyG3u"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-02 00:12:16.349849"], ["updated_at", "2019-04-02 00:12:16.349849"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) AND ("users"."id" != ?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$cgNTIb8x2tcx4vRy1hwL5ueDQii0vVKoXNb3OBdEZFJbWupxbc3Le"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-02 00:12:16.400854"], ["updated_at", "2019-04-02 00:12:16.400854"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$7pcNMbZv8x9zsdmMmIWpgeQn2zfUnxqmWj.REDMl.oaCg3xdUUAvC"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-02 00:12:16.407947"], ["updated_at", "2019-04-02 00:12:16.407947"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$Ax/I4Ju1rIrgH4hnRorSQeSPehFgcRShv.1FQ6lZ0RbnG1kk/jxEa"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-02 00:12:16.414754"], ["updated_at", "2019-04-02 00:12:16.414754"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.0ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$A8tEZjLU91G4j43C7q5LB.E3oTs7MXvxPdBhiZR/yMA7VihL0k7ZS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-02 00:12:16.465557"], ["updated_at", "2019-04-02 00:12:16.465557"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$lhiABkDcg7ivW0q/3AjerOKDZn57VYYjfNe/ZhryrR7ywohmDd/hW"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-02 00:12:16.470502"], ["updated_at", "2019-04-02 00:12:16.470502"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$GRQo69MYOMR612oRY11iNe3IO5x4dR.QEvwc27NkqDoyRWepnr9B6"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-02 00:12:16.476246"], ["updated_at", "2019-04-02 00:12:16.476246"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "a"], ["password_digest", "$2a$04$scovJTPjUpaw2Ei4Mx1Eru.p7xShd7rrWmv.GxJ5anYS3LBWS4bt2"], ["created_at", "2019-04-02 00:12:16.499959"], ["updated_at", "2019-04-02 00:12:16.499959"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$qMbv2mKF9K6BhK0KoDrDt.ocdrI2S5zKSBjm3eIZpSv706eE/4.76"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-02 00:12:16.545200"], ["updated_at", "2019-04-02 00:12:16.545200"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$QvFZ3xS9QSDUCZc.f9nAyetFwQ6TNhZsKRkz3f07qoV9rqhaB0LH2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-02 00:12:16.553150"], ["updated_at", "2019-04-02 00:12:16.553150"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$biwnNpkjAWnUMddDxFdPguPcIYsOHV1dnmHsshWyrb7VhH8Y8h8zS"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-02 00:12:16.559835"], ["updated_at", "2019-04-02 00:12:16.559835"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER(?) LIMIT ?[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.6ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-02 00:12:16.624923"], ["updated_at", "2019-04-02 00:12:16.624923"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "Olympus"], ["created_at", "2019-04-02 00:12:16.632396"], ["updated_at", "2019-04-02 00:12:16.632396"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER(?) LIMIT ?[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "North Boroughs"], ["created_at", "2019-04-02 00:12:16.637958"], ["updated_at", "2019-04-02 00:12:16.637958"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 1], ["created_at", "2019-04-02 00:12:16.643851"], ["updated_at", "2019-04-02 00:12:16.643851"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Olympus"], ["branch_id", 2], ["created_at", "2019-04-02 00:12:16.650511"], ["updated_at", "2019-04-02 00:12:16.650511"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["name", "Avonworth Community Park"], ["branch_id", 3], ["created_at", "2019-04-02 00:12:16.655207"], ["updated_at", "2019-04-02 00:12:16.655207"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = ?[0m  [["id", 3]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 2]]
  [1m[35mSQL (0.1ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.7ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT ?[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["name", "a"], ["created_at", "2019-04-02 00:12:16.699593"], ["updated_at", "2019-04-02 00:12:16.699593"]]
  [1m[35m (0.0ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER(?) LIMIT ?[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (223.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "myapp_test"[0m
  [1m[35m (533.5ms)[0m  [1m[35mCREATE DATABASE "myapp_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges" CASCADE[0m
  [1m[35m (12.3ms)[0m  [1m[35mCREATE TABLE "badges" ("id" bigserial primary key, "name" character varying, "level" integer, "description" text, "skill_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_badges_on_skill_id" ON "badges"  ("skill_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches" CASCADE[0m
  [1m[35m (8.5ms)[0m  [1m[35mCREATE TABLE "branches" ("id" bigserial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges" CASCADE[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" bigserial primary key, "badge_id" bigint, "camp_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_camp_badges_on_badge_id" ON "camp_badges"  ("badge_id")[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_camp_badges_on_camp_id" ON "camp_badges"  ("camp_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks" CASCADE[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" bigserial primary key, "camper_camp_badge_id" bigint, "task_id" bigint, "completed" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks"  ("camper_camp_badge_id")[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks"  ("task_id")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges" CASCADE[0m
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" bigserial primary key, "camp_badge_id" bigint, "camper_id" bigint, "completed" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges"  ("camp_badge_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges"  ("camper_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers" CASCADE[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "campers" ("id" bigserial primary key, "parent_id" bigint, "first_name" character varying, "last_name" character varying, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_campers_on_parent_id" ON "campers"  ("parent_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps" CASCADE[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "camps" ("id" bigserial primary key, "name" character varying, "program" character varying, "start_date" date, "end_date" date, "active" boolean, "location_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_camps_on_location_id" ON "camps"  ("location_id")[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges" CASCADE[0m
  [1m[35m (6.1ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" bigserial primary key, "camp_badge_id" bigint, "counselor_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges"  ("camp_badge_id")[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges"  ("counselor_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors" CASCADE[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" bigserial primary key, "user_id" bigint, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_counselors_on_user_id" ON "counselors"  ("user_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations" CASCADE[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "locations" ("id" bigserial primary key, "name" character varying, "branch_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_locations_on_branch_id" ON "locations"  ("branch_id")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents" CASCADE[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "parents" ("id" bigserial primary key, "user_id" bigint, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE  INDEX  "index_parents_on_user_id" ON "parents"  ("user_id")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills" CASCADE[0m
  [1m[35m (7.2ms)[0m  [1m[35mCREATE TABLE "skills" ("id" bigserial primary key, "name" character varying, "category" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks" CASCADE[0m
  [1m[35m (6.7ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" bigserial primary key, "name" character varying, "description" text, "badge_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_tasks_on_badge_id" ON "tasks"  ("badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (6.7ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password_digest" character varying, "first_name" character varying, "last_name" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (6.5ms)[0m  [1m[35mALTER TABLE "badges" ADD CONSTRAINT "fk_rails_b47583f721"
FOREIGN KEY ("skill_id")
  REFERENCES "skills" ("id")
[0m
  [1m[35m (4.1ms)[0m  [1m[35mALTER TABLE "camp_badges" ADD CONSTRAINT "fk_rails_1561d3748c"
FOREIGN KEY ("badge_id")
  REFERENCES "badges" ("id")
[0m
  [1m[35m (3.5ms)[0m  [1m[35mALTER TABLE "camp_badges" ADD CONSTRAINT "fk_rails_6b58b637bd"
FOREIGN KEY ("camp_id")
  REFERENCES "camps" ("id")
[0m
  [1m[35m (3.3ms)[0m  [1m[35mALTER TABLE "camper_camp_badge_tasks" ADD CONSTRAINT "fk_rails_e94489eb0b"
FOREIGN KEY ("camper_camp_badge_id")
  REFERENCES "camper_camp_badges" ("id")
[0m
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "camper_camp_badge_tasks" ADD CONSTRAINT "fk_rails_746a025bbb"
FOREIGN KEY ("task_id")
  REFERENCES "tasks" ("id")
[0m
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "camper_camp_badges" ADD CONSTRAINT "fk_rails_add6a2f59e"
FOREIGN KEY ("camp_badge_id")
  REFERENCES "camp_badges" ("id")
[0m
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "camper_camp_badges" ADD CONSTRAINT "fk_rails_70bdc09457"
FOREIGN KEY ("camper_id")
  REFERENCES "campers" ("id")
[0m
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "campers" ADD CONSTRAINT "fk_rails_7b54a3d909"
FOREIGN KEY ("parent_id")
  REFERENCES "parents" ("id")
[0m
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "camps" ADD CONSTRAINT "fk_rails_49325a0599"
FOREIGN KEY ("location_id")
  REFERENCES "locations" ("id")
[0m
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "counselor_camp_badges" ADD CONSTRAINT "fk_rails_5eeeb5a748"
FOREIGN KEY ("camp_badge_id")
  REFERENCES "camp_badges" ("id")
[0m
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "counselor_camp_badges" ADD CONSTRAINT "fk_rails_2866b79dd0"
FOREIGN KEY ("counselor_id")
  REFERENCES "counselors" ("id")
[0m
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "counselors" ADD CONSTRAINT "fk_rails_2b40193edf"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "locations" ADD CONSTRAINT "fk_rails_08771c5210"
FOREIGN KEY ("branch_id")
  REFERENCES "branches" ("id")
[0m
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "parents" ADD CONSTRAINT "fk_rails_27c1d070f3"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (3.4ms)[0m  [1m[35mALTER TABLE "tasks" ADD CONSTRAINT "fk_rails_f95e53d445"
FOREIGN KEY ("badge_id")
  REFERENCES "badges" ("id")
[0m
  [1m[35m (6.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190325042954)[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171158),
(20190318171031),
(20190318171054),
(20190318171110),
(20190318171006),
(20190318171109),
(20190318171020),
(20190318171007),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-04-08 21:49:35.923632"], ["updated_at", "2019-04-08 21:49:35.923632"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (7.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (6.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (217.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "myapp_test"[0m
  [1m[35m (1323.5ms)[0m  [1m[35mCREATE DATABASE "myapp_test" ENCODING = 'unicode'[0m
  [1m[35mSQL (1.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "badges" CASCADE[0m
  [1m[35m (19.0ms)[0m  [1m[35mCREATE TABLE "badges" ("id" bigserial primary key, "name" character varying, "level" integer, "description" text, "skill_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_badges_on_skill_id" ON "badges"  ("skill_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "branches" CASCADE[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "branches" ("id" bigserial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "camp_badges" CASCADE[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "camp_badges" ("id" bigserial primary key, "badge_id" bigint, "camp_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_camp_badges_on_badge_id" ON "camp_badges"  ("badge_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_camp_badges_on_camp_id" ON "camp_badges"  ("camp_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badge_tasks" CASCADE[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "camper_camp_badge_tasks" ("id" bigserial primary key, "camper_camp_badge_id" bigint, "task_id" bigint, "completed" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badge_tasks_on_camper_camp_badge_id" ON "camper_camp_badge_tasks"  ("camper_camp_badge_id")[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badge_tasks_on_task_id" ON "camper_camp_badge_tasks"  ("task_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camper_camp_badges" CASCADE[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "camper_camp_badges" ("id" bigserial primary key, "camp_badge_id" bigint, "camper_id" bigint, "completed" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badges_on_camp_badge_id" ON "camper_camp_badges"  ("camp_badge_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_camper_camp_badges_on_camper_id" ON "camper_camp_badges"  ("camper_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "campers" CASCADE[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "campers" ("id" bigserial primary key, "parent_id" bigint, "first_name" character varying, "last_name" character varying, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_campers_on_parent_id" ON "campers"  ("parent_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "camps" CASCADE[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "camps" ("id" bigserial primary key, "name" character varying, "program" character varying, "start_date" date, "end_date" date, "active" boolean, "location_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_camps_on_location_id" ON "camps"  ("location_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselor_camp_badges" CASCADE[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "counselor_camp_badges" ("id" bigserial primary key, "camp_badge_id" bigint, "counselor_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_counselor_camp_badges_on_camp_badge_id" ON "counselor_camp_badges"  ("camp_badge_id")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_counselor_camp_badges_on_counselor_id" ON "counselor_camp_badges"  ("counselor_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "counselors" CASCADE[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "counselors" ("id" bigserial primary key, "user_id" bigint, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_counselors_on_user_id" ON "counselors"  ("user_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "locations" CASCADE[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "locations" ("id" bigserial primary key, "name" character varying, "branch_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_locations_on_branch_id" ON "locations"  ("branch_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "parents" CASCADE[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "parents" ("id" bigserial primary key, "user_id" bigint, "active" boolean, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_parents_on_user_id" ON "parents"  ("user_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "skills" CASCADE[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "skills" ("id" bigserial primary key, "name" character varying, "category" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "tasks" CASCADE[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "tasks" ("id" bigserial primary key, "name" character varying, "description" text, "badge_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_tasks_on_badge_id" ON "tasks"  ("badge_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password_digest" character varying, "first_name" character varying, "last_name" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (7.9ms)[0m  [1m[35mALTER TABLE "badges" ADD CONSTRAINT "fk_rails_b47583f721"
FOREIGN KEY ("skill_id")
  REFERENCES "skills" ("id")
[0m
  [1m[35m (5.0ms)[0m  [1m[35mALTER TABLE "camp_badges" ADD CONSTRAINT "fk_rails_1561d3748c"
FOREIGN KEY ("badge_id")
  REFERENCES "badges" ("id")
[0m
  [1m[35m (4.0ms)[0m  [1m[35mALTER TABLE "camp_badges" ADD CONSTRAINT "fk_rails_6b58b637bd"
FOREIGN KEY ("camp_id")
  REFERENCES "camps" ("id")
[0m
  [1m[35m (8.7ms)[0m  [1m[35mALTER TABLE "camper_camp_badge_tasks" ADD CONSTRAINT "fk_rails_e94489eb0b"
FOREIGN KEY ("camper_camp_badge_id")
  REFERENCES "camper_camp_badges" ("id")
[0m
  [1m[35m (3.8ms)[0m  [1m[35mALTER TABLE "camper_camp_badge_tasks" ADD CONSTRAINT "fk_rails_746a025bbb"
FOREIGN KEY ("task_id")
  REFERENCES "tasks" ("id")
[0m
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "camper_camp_badges" ADD CONSTRAINT "fk_rails_add6a2f59e"
FOREIGN KEY ("camp_badge_id")
  REFERENCES "camp_badges" ("id")
[0m
  [1m[35m (3.6ms)[0m  [1m[35mALTER TABLE "camper_camp_badges" ADD CONSTRAINT "fk_rails_70bdc09457"
FOREIGN KEY ("camper_id")
  REFERENCES "campers" ("id")
[0m
  [1m[35m (3.9ms)[0m  [1m[35mALTER TABLE "campers" ADD CONSTRAINT "fk_rails_7b54a3d909"
FOREIGN KEY ("parent_id")
  REFERENCES "parents" ("id")
[0m
  [1m[35m (3.8ms)[0m  [1m[35mALTER TABLE "camps" ADD CONSTRAINT "fk_rails_49325a0599"
FOREIGN KEY ("location_id")
  REFERENCES "locations" ("id")
[0m
  [1m[35m (5.3ms)[0m  [1m[35mALTER TABLE "counselor_camp_badges" ADD CONSTRAINT "fk_rails_5eeeb5a748"
FOREIGN KEY ("camp_badge_id")
  REFERENCES "camp_badges" ("id")
[0m
  [1m[35m (4.5ms)[0m  [1m[35mALTER TABLE "counselor_camp_badges" ADD CONSTRAINT "fk_rails_2866b79dd0"
FOREIGN KEY ("counselor_id")
  REFERENCES "counselors" ("id")
[0m
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "counselors" ADD CONSTRAINT "fk_rails_2b40193edf"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "locations" ADD CONSTRAINT "fk_rails_08771c5210"
FOREIGN KEY ("branch_id")
  REFERENCES "branches" ("id")
[0m
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "parents" ADD CONSTRAINT "fk_rails_27c1d070f3"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "tasks" ADD CONSTRAINT "fk_rails_f95e53d445"
FOREIGN KEY ("badge_id")
  REFERENCES "badges" ("id")
[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190410032015)[0m
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190318171127),
(20190318171146),
(20190318171158),
(20190318171031),
(20190318171054),
(20190318171110),
(20190325042954),
(20190318171006),
(20190318171109),
(20190318171020),
(20190318171007),
(20190318171050),
(20190318171025),
(20190318171101),
(20190318171152);

[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "test"], ["created_at", "2019-04-13 08:11:31.240233"], ["updated_at", "2019-04-13 08:11:31.240233"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (4.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CampTest: test_: Camp should have many camp_badges. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
CampTest: test_: Camp should require end_date to be set. 
---------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
CampTest: test_: Camp should require location_id to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------
CampTest: test_: Camp should require program to be set. 
--------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------
CampTest: test_: Camp should require name to be set. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------
CampTest: test_: Camp should require start_date to be set. 
-----------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------------
CampTest: test_: Camp should not allow start_date to be set to "bad". 
----------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------
CampTest: test_: Camp should not allow end_date to be set to "bad". 
--------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
CampTest: test_: Camp should belong to location. 
-------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------
CounselorTest: test_: Counselor should belong to user. 
-------------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------------------
UserTest: test_: Within context should require passwords to be confirmed and matching. 
---------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (1.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$TN2zFGK3Cx4wICd9w/Kq.uswZi9laEta2FEz.Xq/Q8xiJ/Ym0cf6u"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-13 08:11:32.857830"], ["updated_at", "2019-04-13 08:11:32.857830"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$AvpNJ5XiUO7Nik4dO8lveenv6jCkw21hv8lpiwou9OQ0DGEWVC2Y."], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-13 08:11:32.868410"], ["updated_at", "2019-04-13 08:11:32.868410"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$Km7VtYrSJWNxM1hMosJjE.S7Yr4bJbAgVT37bQhxeQZ52VvJmEqaq"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-13 08:11:32.875216"], ["updated_at", "2019-04-13 08:11:32.875216"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent2@gmail.com"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (2.6ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 2]]
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 3]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------
UserTest: test_: User should allow role to be set to "admin". 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: User should not allow role to be set to 10. 
-------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred123@ymca.gov". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred123@ymca.gov"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred,com". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred@fred,com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred". 
------------------------------------------------------------------
  [1m[36mUser Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
UserTest: test_: User should not allow email to be set to nil. 
---------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------
UserTest: test_: User should have a secure password. 
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------
UserTest: test_: User should require last_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------
UserTest: test_: User should allow role to be set to "counselor". 
------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my_fred@ymca.org". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "my_fred@ymca.org"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (1.5ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: User should require unique value for email. 
-------------------------------------------------------------
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["email", "a"], ["password_digest", "$2a$04$Etk28qz634pLyj2E3UQ5HepXeRRtoYbz1msUoz9PICGaarmJGWW9m"], ["created_at", "2019-04-13 08:11:32.995390"], ["updated_at", "2019-04-13 08:11:32.995390"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "A"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@andrew.cmu.edu". 
-----------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred@andrew.cmu.edu"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "leader". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test_: Within context should require users to have unique emails. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$8YwcyZcgofH/ObCdIuTsTO.KDcYbEK4vxPI3ElfPuaTfeZ5RslWXW"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-13 08:11:33.027600"], ["updated_at", "2019-04-13 08:11:33.027600"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$JUpEL3uuu3rU2yRW/8benOTeIr2X3OhuX/mvuOGN1wPJNUxoCdRBi"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-13 08:11:33.033625"], ["updated_at", "2019-04-13 08:11:33.033625"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$YEwsYZBx3lWFLxo9kWTw5OkkpgvwGtQBLwGKI77Yh.o6/tSx6n3wm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-13 08:11:33.041222"], ["updated_at", "2019-04-13 08:11:33.041222"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "parent@gmail.com"], ["id", 5], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 5]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 6]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 7]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "my.fred@ymca.net". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "my.fred@ymca.net"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "bad". 
----------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
UserTest: test_: User should require email to be set. 
------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
UserTest: test_: User should allow role to be set to "parent". 
---------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------
UserTest: test_: User should not allow role to be set to "hacker". 
-------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------
UserTest: test_: User should require first_name to be set. 
-----------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.uk". 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred@fred.uk"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test_: User should allow email to be set to "fred@ymca.com". 
-----------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred@ymca.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "my fred@fred.com". 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "my fred@fred.com"], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------
UserTest: test_: User should not allow role to be set to nil. 
--------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test_: User should not allow email to be set to "fred@fred.con". 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "fred@fred.con"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test_: Within context should require a password for new users. 
-------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$mclOk5ji1LFEEC69Uc1qX.2gnPKwzQlGWYw5CEUckvyGHUHKRew8a"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-13 08:11:33.146080"], ["updated_at", "2019-04-13 08:11:33.146080"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$rf6XfNn7vnn.3yZwOfbxhO69eQHbXAay6aK0A.YZaWIuswpq3V7Au"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-13 08:11:33.151213"], ["updated_at", "2019-04-13 08:11:33.151213"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.4ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$C/q/RPbe.5OPAt7loc8Mz.BaKF3rEZ00yzx85k.EuhOuEgwm7zWE2"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-13 08:11:33.159332"], ["updated_at", "2019-04-13 08:11:33.159332"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "tank@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 8]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 9]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 10]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------------
UserTest: test_: Within context should allow user to authenticate with password. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$jIZ42YFsI1aUYvjWn8W/ZetnCaqrCiHpzRuFXEE/BQT6z0ppVdkku"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-13 08:11:33.172599"], ["updated_at", "2019-04-13 08:11:33.172599"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$1v/nYymkoqY7tNuOqkhVFuiVVVj4ZWIjUOh4UyyaOlilwWsbj/uOu"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-13 08:11:33.177997"], ["updated_at", "2019-04-13 08:11:33.177997"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$9goKtGh0b3gcwTZSJNgoNuT5wGwKkCErk9m6odRe5Qa0pOhRxBo22"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-13 08:11:33.183228"], ["updated_at", "2019-04-13 08:11:33.183228"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 11]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 12]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 13]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------
UserTest: test_: Within context should have a role? method for authorization. 
------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (1.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "kblack@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "kblack@ymca.org"], ["password_digest", "$2a$04$TpBV6k1t6.a9DzyDwpVo..GjIwOdqQY2WoTxm1rA5qyRCBwESMJ.a"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "admin"], ["created_at", "2019-04-13 08:11:33.200619"], ["updated_at", "2019-04-13 08:11:33.200619"]]
  [1m[35m (0.6ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.4ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "counselor@ymca.org"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "counselor@ymca.org"], ["password_digest", "$2a$04$9p8OqrMsnjWXCbyfHfkW8.m4mBWrAobf/IzVTWnuJVe1sesVgV2Ia"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "counselor"], ["created_at", "2019-04-13 08:11:33.210728"], ["updated_at", "2019-04-13 08:11:33.210728"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.8ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "parent@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "first_name", "last_name", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["email", "parent@gmail.com"], ["password_digest", "$2a$04$.kW4fXF3MWcj0Uu4KJd4PuX9/.1V9/Xo1c12f6qOPKxXZ..jV9Fcm"], ["first_name", "Kim"], ["last_name", "Black"], ["role", "parent"], ["created_at", "2019-04-13 08:11:33.219011"], ["updated_at", "2019-04-13 08:11:33.219011"]]
  [1m[35m (0.4ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 14]]
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 15]]
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------------------------------------
BranchTest: test_: Within context should not allowed creating a duplicate (also testing case sensitivity) branch name. 
-----------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (4.5ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-13 08:11:33.252603"], ["updated_at", "2019-04-13 08:11:33.252603"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Olympus"], ["created_at", "2019-04-13 08:11:33.258305"], ["updated_at", "2019-04-13 08:11:33.258305"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "North Boroughs"], ["created_at", "2019-04-13 08:11:33.264176"], ["updated_at", "2019-04-13 08:11:33.264176"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "north boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 2]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 3]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
BranchTest: test_: Branch should have many locations. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
BranchTest: test_: Branch should require name to be set. 
---------------------------------------------------------
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE "branches"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------
BranchTest: test_: Branch should have many camps through locations. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
BranchTest: test_: Branch should require unique value for name. 
----------------------------------------------------------------
  [1m[36mBranch Load (0.1ms)[0m  [1m[34mSELECT  "branches".* FROM "branches" ORDER BY "branches"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "a"], ["created_at", "2019-04-13 08:11:33.289708"], ["updated_at", "2019-04-13 08:11:33.289708"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------------------
BranchTest: test_: Within context should list branch in alphabetical order. 
----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-13 08:11:33.298339"], ["updated_at", "2019-04-13 08:11:33.298339"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Olympus"], ["created_at", "2019-04-13 08:11:33.304439"], ["updated_at", "2019-04-13 08:11:33.304439"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "North Boroughs"], ["created_at", "2019-04-13 08:11:33.309202"], ["updated_at", "2019-04-13 08:11:33.309202"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBranch Load (0.2ms)[0m  [1m[34mSELECT "branches".* FROM "branches" ORDER BY name[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 5]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 6]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 7]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camper_id to be set. 
--------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should have many camper_camp_badge_tasks. 
--------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camper. 
---------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------------
CamperCampBadgeTest: test_: CamperCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------
SkillTest: test_: Skill should require name to be set. 
-------------------------------------------------------
  [1m[36mSkill Exists (1.9ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------
SkillTest: test_: Skill should require category to be set. 
-----------------------------------------------------------
  [1m[36mSkill Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "skills" WHERE "skills"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
SkillTest: test_: Skill should have many badges. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to camp. 
-------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------
CampBadgeTest: test_: CampBadge should belong to badge. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require camp_id to be set. 
------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------
CampBadgeTest: test_: CampBadge should require badge_id to be set. 
-------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to task. 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require camper_camp_badge_id to be set. 
---------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should require task_id to be set. 
--------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------------------------------
CamperCampBadgeTaskTest: test_: CamperCampBadgeTask should belong to camper_camp_badge. 
----------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
BadgeTest: test_: Badge should have many camp_badges. 
------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
BadgeTest: test_: Badge should belong to skill. 
------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------
BadgeTest: test_: Badge should require name to be set. 
-------------------------------------------------------
  [1m[36mBadge Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------
BadgeTest: test_: Badge should require skill_id to be set. 
-----------------------------------------------------------
  [1m[36mBadge Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE "badges"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------
BadgeTest: test_: Badge should require unique value for name. 
--------------------------------------------------------------
  [1m[36mBadge Load (0.3ms)[0m  [1m[34mSELECT  "badges".* FROM "badges" ORDER BY "badges"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "badges" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "a"], ["created_at", "2019-04-13 08:11:33.482304"], ["updated_at", "2019-04-13 08:11:33.482304"]]
  [1m[35m (2.7ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mBadge Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "badges" WHERE LOWER("badges"."name") = LOWER($1) LIMIT $2[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
TaskTest: test_: Task should belong to badge. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------
TaskTest: test_: Task should require badge_id to be set. 
---------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------
LocationTest: test_: Location should have many camps. 
------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------------------------
LocationTest: test_: Location should require unique value for name. 
--------------------------------------------------------------------
  [1m[36mLocation Load (0.2ms)[0m  [1m[34mSELECT  "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "locations" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "a"], ["created_at", "2019-04-13 08:11:33.535561"], ["updated_at", "2019-04-13 08:11:33.535561"]]
  [1m[35m (0.6ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER($1) LIMIT $2[0m  [["name", "A"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------
LocationTest: test_: Location should belong to branch. 
-------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------
LocationTest: test_: Location should require branch_id to be set. 
------------------------------------------------------------------
  [1m[36mLocation Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
LocationTest: test_: Location should require name to be set. 
-------------------------------------------------------------
  [1m[36mLocation Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE "locations"."name" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------------------------
LocationTest: test_: Within context should list locations in alphabetical order. 
---------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Thelma Lovette"], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Thelma Lovette"], ["created_at", "2019-04-13 08:11:33.577539"], ["updated_at", "2019-04-13 08:11:33.577539"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Olympus"], ["created_at", "2019-04-13 08:11:33.584789"], ["updated_at", "2019-04-13 08:11:33.584789"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mBranch Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "branches" WHERE LOWER("branches"."name") = LOWER($1) LIMIT $2[0m  [["name", "North Boroughs"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "branches" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "North Boroughs"], ["created_at", "2019-04-13 08:11:33.589091"], ["updated_at", "2019-04-13 08:11:33.589091"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER($1) LIMIT $2[0m  [["name", "Thelma Lovette YMCA"], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "Thelma Lovette YMCA"], ["branch_id", 8], ["created_at", "2019-04-13 08:11:33.593525"], ["updated_at", "2019-04-13 08:11:33.593525"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER($1) LIMIT $2[0m  [["name", "Olympus"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "Olympus"], ["branch_id", 9], ["created_at", "2019-04-13 08:11:33.597693"], ["updated_at", "2019-04-13 08:11:33.597693"]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mLocation Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "locations" WHERE LOWER("locations"."name") = LOWER($1) LIMIT $2[0m  [["name", "Avonworth Community Park"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "locations" ("name", "branch_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "Avonworth Community Park"], ["branch_id", 10], ["created_at", "2019-04-13 08:11:33.603953"], ["updated_at", "2019-04-13 08:11:33.603953"]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mLocation Load (0.3ms)[0m  [1m[34mSELECT "locations".* FROM "locations" ORDER BY name[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = $1[0m  [["id", 2]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = $1[0m  [["id", 3]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "locations" WHERE "locations"."id" = $1[0m  [["id", 4]]
  [1m[35mSQL (0.7ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 8]]
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 9]]
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "branches" WHERE "branches"."id" = $1[0m  [["id", 10]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
ParentTest: test_: Parent should belong to user. 
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
ParentTest: test_: Parent should have many campers. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require camp_badge_id to be set. 
------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should require counselor_id to be set. 
-----------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to camp_badge. 
-------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------------------------
CounselorCampBadgeTest: test_: CounselorCampBadge should belong to counselor. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
